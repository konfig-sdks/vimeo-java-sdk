/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ChannelsModeratorsRemoveMultipleFromChannelRequest;
import com.konfigthis.client.model.ChannelsModeratorsReplaceModeratorsRequest;
import com.konfigthis.client.model.User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChannelsModeratorsApi
 */
@Disabled
public class ChannelsModeratorsApiTest {

    private static ChannelsModeratorsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ChannelsModeratorsApi(apiClient);
    }

    /**
     * Add a specific moderator to a channel
     *
     * This method adds a single user as a moderator to the specified channel. The authenticated user must be a follower of the requested user to add them as a channel moderator.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addModeratorToChannelTest() throws ApiException {
        Double channelId = null;
        Double userId = null;
        api.addModeratorToChannel(channelId, userId)
                .execute();
        // TODO: test validations
    }

    /**
     * Add a list of moderators to a channel
     *
     * This method adds multiple users as moderators to the specified channel. Include the users by their URI as a JSON array in the body of the request using the **user_uri** field, like this: &#x60;[{ \&quot;user_uri\&quot;: \&quot;/users/1234\&quot; }, { \&quot;user_uri\&quot;: \&quot;/users/1235\&quot; }]&#x60;. The authenticated user must be a follower of a requested user to add this person as a moderator. For more information on batch requests like this one, see [Using Common Formats and Parameters](https://developer.vimeo.com/api/common-formats#working-with-batch-requests).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bulkAddModeratorsTest() throws ApiException {
        Double channelId = null;
        api.bulkAddModerators(channelId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a specific moderator of a channel
     *
     * This method returns a single moderator of the specified channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificModeratorTest() throws ApiException {
        Double channelId = null;
        Double userId = null;
        User response = api.getSpecificModerator(channelId, userId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all the moderators of a channel
     *
     * This method returns every moderator of the specified channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listByChannelTest() throws ApiException {
        Double channelId = null;
        String direction = null;
        Double page = null;
        Double perPage = null;
        String query = null;
        String sort = null;
        List<User> response = api.listByChannel(channelId)
                .direction(direction)
                .page(page)
                .perPage(perPage)
                .query(query)
                .sort(sort)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove a specific moderator from a channel
     *
     * This method removes a single moderator from the specified channel. The authenticated user must be the owner of the channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeModeratorTest() throws ApiException {
        Double channelId = null;
        Double userId = null;
        api.removeModerator(channelId, userId)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove a list of moderators from a channel
     *
     * This method removes multiple moderators from the specified channel. The authenticated user must be the owner of the channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeMultipleFromChannelTest() throws ApiException {
        String userUri = null;
        Double channelId = null;
        api.removeMultipleFromChannel(userUri, channelId)
                .execute();
        // TODO: test validations
    }

    /**
     * Replace the moderators of a channel
     *
     * This method replaces the current list of channel moderators with a new list. The authenticated user must be the owner of the channel and a follower of each requested user to add them as a channel moderator.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceModeratorsTest() throws ApiException {
        String userUri = null;
        Double channelId = null;
        List<User> response = api.replaceModerators(userUri, channelId)
                .execute();
        // TODO: test validations
    }

}
