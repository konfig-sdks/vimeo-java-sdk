/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.UserMetadataConnectionsAlbums;
import com.konfigthis.client.model.UserMetadataConnectionsAppearances;
import com.konfigthis.client.model.UserMetadataConnectionsBlock;
import com.konfigthis.client.model.UserMetadataConnectionsCategories;
import com.konfigthis.client.model.UserMetadataConnectionsChannels;
import com.konfigthis.client.model.UserMetadataConnectionsConnectedApps;
import com.konfigthis.client.model.UserMetadataConnectionsFeed;
import com.konfigthis.client.model.UserMetadataConnectionsFolders;
import com.konfigthis.client.model.UserMetadataConnectionsFoldersRoot;
import com.konfigthis.client.model.UserMetadataConnectionsFollowers;
import com.konfigthis.client.model.UserMetadataConnectionsFollowing;
import com.konfigthis.client.model.UserMetadataConnectionsGroups;
import com.konfigthis.client.model.UserMetadataConnectionsLikes;
import com.konfigthis.client.model.UserMetadataConnectionsModeratedChannels;
import com.konfigthis.client.model.UserMetadataConnectionsPictures;
import com.konfigthis.client.model.UserMetadataConnectionsPortfolios;
import com.konfigthis.client.model.UserMetadataConnectionsRecommendedChannels;
import com.konfigthis.client.model.UserMetadataConnectionsRecommendedUsers;
import com.konfigthis.client.model.UserMetadataConnectionsShared;
import com.konfigthis.client.model.UserMetadataConnectionsVideos;
import com.konfigthis.client.model.UserMetadataConnectionsWatchedVideos;
import com.konfigthis.client.model.UserMetadataConnectionsWatchlater;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for UserMetadataConnections
 */
public class UserMetadataConnectionsTest {
    private final UserMetadataConnections model = new UserMetadataConnections();

    /**
     * Model tests for UserMetadataConnections
     */
    @Test
    public void testUserMetadataConnections() {
        // TODO: test UserMetadataConnections
    }

    /**
     * Test the property 'albums'
     */
    @Test
    public void albumsTest() {
        // TODO: test albums
    }

    /**
     * Test the property 'appearances'
     */
    @Test
    public void appearancesTest() {
        // TODO: test appearances
    }

    /**
     * Test the property 'block'
     */
    @Test
    public void blockTest() {
        // TODO: test block
    }

    /**
     * Test the property 'categories'
     */
    @Test
    public void categoriesTest() {
        // TODO: test categories
    }

    /**
     * Test the property 'channels'
     */
    @Test
    public void channelsTest() {
        // TODO: test channels
    }

    /**
     * Test the property 'connectedApps'
     */
    @Test
    public void connectedAppsTest() {
        // TODO: test connectedApps
    }

    /**
     * Test the property 'feed'
     */
    @Test
    public void feedTest() {
        // TODO: test feed
    }

    /**
     * Test the property 'folders'
     */
    @Test
    public void foldersTest() {
        // TODO: test folders
    }

    /**
     * Test the property 'foldersRoot'
     */
    @Test
    public void foldersRootTest() {
        // TODO: test foldersRoot
    }

    /**
     * Test the property 'followers'
     */
    @Test
    public void followersTest() {
        // TODO: test followers
    }

    /**
     * Test the property 'following'
     */
    @Test
    public void followingTest() {
        // TODO: test following
    }

    /**
     * Test the property 'groups'
     */
    @Test
    public void groupsTest() {
        // TODO: test groups
    }

    /**
     * Test the property 'likes'
     */
    @Test
    public void likesTest() {
        // TODO: test likes
    }

    /**
     * Test the property 'moderatedChannels'
     */
    @Test
    public void moderatedChannelsTest() {
        // TODO: test moderatedChannels
    }

    /**
     * Test the property 'pictures'
     */
    @Test
    public void picturesTest() {
        // TODO: test pictures
    }

    /**
     * Test the property 'portfolios'
     */
    @Test
    public void portfoliosTest() {
        // TODO: test portfolios
    }

    /**
     * Test the property 'recommendedChannels'
     */
    @Test
    public void recommendedChannelsTest() {
        // TODO: test recommendedChannels
    }

    /**
     * Test the property 'recommendedUsers'
     */
    @Test
    public void recommendedUsersTest() {
        // TODO: test recommendedUsers
    }

    /**
     * Test the property 'shared'
     */
    @Test
    public void sharedTest() {
        // TODO: test shared
    }

    /**
     * Test the property 'videos'
     */
    @Test
    public void videosTest() {
        // TODO: test videos
    }

    /**
     * Test the property 'watchedVideos'
     */
    @Test
    public void watchedVideosTest() {
        // TODO: test watchedVideos
    }

    /**
     * Test the property 'watchlater'
     */
    @Test
    public void watchlaterTest() {
        // TODO: test watchlater
    }

}
