/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ChannelsTagsAddMultipleTagsToChannelRequest;
import com.konfigthis.client.model.Tag;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChannelsTagsApi
 */
@Disabled
public class ChannelsTagsApiTest {

    private static ChannelsTagsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ChannelsTagsApi(apiClient);
    }

    /**
     * Add a list of tags to a channel
     *
     * This method adds multiple tags to the specified channel. Include the tags as a JSON array in the body of the request using the **tag** field, like this: &#x60;[{ \&quot;tag\&quot;: \&quot;funny\&quot; }, { \&quot;tag\&quot;: \&quot;concert\&quot; }]&#x60;. The authenticated user must be the owner of the channel. For more information on batch requests like this one, see [Using Common Formats and Parameters](https://developer.vimeo.com/api/common-formats#working-with-batch-requests).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addMultipleTagsToChannelTest() throws ApiException {
        List<String> tag = null;
        Double channelId = null;
        List<Tag> response = api.addMultipleTagsToChannel(tag, channelId)
                .execute();
        // TODO: test validations
    }

    /**
     * Add a specific tag to a channel
     *
     * This method adds a single tag to the specified channel. The authenticated user must be the owner of the channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTagToChannelTest() throws ApiException {
        Double channelId = null;
        String word = null;
        api.addTagToChannel(channelId, word)
                .execute();
        // TODO: test validations
    }

    /**
     * Check if a tag has been added to a channel
     *
     * This method determines whether a tag has been added to the specified channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkIfTagAddedToChannelTest() throws ApiException {
        Double channelId = null;
        String word = null;
        api.checkIfTagAddedToChannel(channelId, word)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all the tags that have been added to a channel
     *
     * This method returns every tag that has been added to the specified channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllChannelTagsTest() throws ApiException {
        Double channelId = null;
        List<Tag> response = api.getAllChannelTags(channelId)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove a tag from a channel
     *
     * This method removes a single tag from the specified channel. The authenticated user must be the owner of the channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeTagFromChannelTest() throws ApiException {
        Double channelId = null;
        String word = null;
        api.removeTagFromChannel(channelId, word)
                .execute();
        // TODO: test validations
    }

}
