/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.OnDemandGenre;
import com.konfigthis.client.model.OnDemandPage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OnDemandGenresApi
 */
@Disabled
public class OnDemandGenresApiTest {

    private static OnDemandGenresApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new OnDemandGenresApi(apiClient);
    }

    /**
     * Add a genre to an On Demand page
     *
     * This method adds the specified genre designation to an On Demand page. A page can be associated with a maximum of two genres. The authenticated user must be the owner of the page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addGenreToPageTest() throws ApiException {
        String genreId = null;
        Double ondemandId = null;
        OnDemandGenre response = api.addGenreToPage(genreId, ondemandId)
                .execute();
        // TODO: test validations
    }

    /**
     * Check whether an On Demand page belongs to a specific genre
     *
     * This method determines whether an On Demand page is associated with the specified genre.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkGenreAssociationTest() throws ApiException {
        String genreId = null;
        Double ondemandId = null;
        OnDemandGenre response = api.checkGenreAssociation(genreId, ondemandId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all On Demand genres
     *
     * This method returns every existing On Demand genre.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllGenresTest() throws ApiException {
        List<OnDemandGenre> response = api.getAllGenres()
                .execute();
        // TODO: test validations
    }

    /**
     * Get all the On Demand pages in a genre
     *
     * This method returns every On Demand page that belongs to the specified genre.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllPagesInGenreTest() throws ApiException {
        String genreId = null;
        String direction = null;
        String filter = null;
        Double page = null;
        Double perPage = null;
        String query = null;
        String sort = null;
        List<OnDemandPage> response = api.getAllPagesInGenre(genreId)
                .direction(direction)
                .filter(filter)
                .page(page)
                .perPage(perPage)
                .query(query)
                .sort(sort)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all the genres of an On Demand page
     *
     * This method returns every genre associated with the specified On Demand page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGenresTest() throws ApiException {
        Double ondemandId = null;
        List<OnDemandGenre> response = api.getGenres(ondemandId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a specific On Demand page in a genre
     *
     * This method returns a single On Demand page that belongs to the specified genre.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificPageInGenreTest() throws ApiException {
        String genreId = null;
        Double ondemandId = null;
        OnDemandPage response = api.getSpecificPageInGenre(genreId, ondemandId)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove a genre from an On Demand page
     *
     * This method removes a genre association from the specified On Demand page. The authenticated user must be the owner of the page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeGenreFromPageTest() throws ApiException {
        String genreId = null;
        Double ondemandId = null;
        api.removeGenreFromPage(genreId, ondemandId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a specific On Demand genre
     *
     * This method returns a single On Demand genre.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void specificGenreGetTest() throws ApiException {
        String genreId = null;
        OnDemandGenre response = api.specificGenreGet(genreId)
                .execute();
        // TODO: test validations
    }

}
