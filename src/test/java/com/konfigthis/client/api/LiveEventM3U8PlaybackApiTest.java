/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LiveEventM3U8PlaybackApi
 */
@Disabled
public class LiveEventM3U8PlaybackApiTest {

    private static LiveEventM3U8PlaybackApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new LiveEventM3U8PlaybackApi(apiClient);
    }

    /**
     * Get an M3U8 playback URL for a live event
     *
     * This method returns an M3U8 playback URL for the specified event stream. You should use this endpoint only in conjunction with our recommended procedure for playing events via HLS. For more information, see our [HLS guide](https://developer.vimeo.com/api/live/playback).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUrlTest() throws ApiException {
        Double liveEventId = null;
        Double maxFpsFhd = null;
        api.getUrl(liveEventId)
                .maxFpsFhd(maxFpsFhd)
                .execute();
        // TODO: test validations
    }

    /**
     * Get an M3U8 playback URL for a live event
     *
     * This method returns an M3U8 playback URL for the specified event stream. You should use this endpoint only in conjunction with our recommended procedure for playing events via HLS. For more information, see our [HLS guide](https://developer.vimeo.com/api/live/playback).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUrlForEventStreamTest() throws ApiException {
        Double liveEventId = null;
        Double userId = null;
        Double maxFpsFhd = null;
        api.getUrlForEventStream(liveEventId, userId)
                .maxFpsFhd(maxFpsFhd)
                .execute();
        // TODO: test validations
    }

}
