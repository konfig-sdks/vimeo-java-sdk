/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * OnDemandPromotionsAddPromotionToPageRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class OnDemandPromotionsAddPromotionToPageRequest {
  /**
   * The promotion access type, which is a purchase option that isn&#39;t available in the On Demand container. Use the **download** and **stream_period** parameters to define additional characteristics for the &#x60;vip&#x60; type.  Option descriptions:  * &#x60;default&#x60; - The promotion grants a discount on the existing purchase options for an On Demand container.  * &#x60;vip&#x60; - The promotion grants free access to On Demand content before it&#39;s released. 
   */
  @JsonAdapter(AccessTypeEnum.Adapter.class)
 public enum AccessTypeEnum {
    DEFAULT("default"),
    
    VIP("vip");

    private String value;

    AccessTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AccessTypeEnum fromValue(String value) {
      for (AccessTypeEnum b : AccessTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AccessTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AccessTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AccessTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AccessTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ACCESS_TYPE = "access_type";
  @SerializedName(SERIALIZED_NAME_ACCESS_TYPE)
  private AccessTypeEnum accessType;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  /**
   * The type of discount offered by the promotion code. When **access_type** is &#x60;vip&#x60;, the value of this parameter must be &#x60;free&#x60;.  Option descriptions:  * &#x60;free&#x60; - The discount reduces the price to zero.  * &#x60;percent&#x60; - The discount reduces the price by the percentage defined in the **percent_off** parameter. 
   */
  @JsonAdapter(DiscountTypeEnum.Adapter.class)
 public enum DiscountTypeEnum {
    FREE("free"),
    
    PERCENT("percent");

    private String value;

    DiscountTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DiscountTypeEnum fromValue(String value) {
      for (DiscountTypeEnum b : DiscountTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DiscountTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DiscountTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DiscountTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DiscountTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DISCOUNT_TYPE = "discount_type";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_TYPE)
  private DiscountTypeEnum discountType;

  public static final String SERIALIZED_NAME_DOWNLOAD = "download";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD)
  private Boolean download;

  public static final String SERIALIZED_NAME_END_TIME = "end_time";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_PERCENT_OFF = "percent_off";
  @SerializedName(SERIALIZED_NAME_PERCENT_OFF)
  private Double percentOff;

  /**
   * The type of transaction to which the promotion applies. When **access_type** is &#x60;default&#x60;, the default value is &#x60;any&#x60;. When **access_type** is &#x60;vip&#x60;, the default value is &#x60;rent&#x60; and the only valid product types are &#x60;buy&#x60; and &#x60;rent&#x60;.  Option descriptions:  * &#x60;any&#x60; - The promotion applies to any transaction.  * &#x60;buy&#x60; - The promotion applies only to purchased products.  * &#x60;buy_episode&#x60; - The promotion applies only to purchased episodes.  * &#x60;rent&#x60; - The promotion applies only to rented products.  * &#x60;rent_episode&#x60; - The promotion applies only to rented episodes.  * &#x60;subscribe&#x60; - The promotion applies only to subscriptions. 
   */
  @JsonAdapter(ProductTypeEnum.Adapter.class)
 public enum ProductTypeEnum {
    ANY("any"),
    
    BUY("buy"),
    
    BUY_EPISODE("buy_episode"),
    
    RENT("rent"),
    
    RENT_EPISODE("rent_episode"),
    
    SUBSCRIBE("subscribe");

    private String value;

    ProductTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProductTypeEnum fromValue(String value) {
      for (ProductTypeEnum b : ProductTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProductTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProductTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProductTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProductTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "product_type";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  private ProductTypeEnum productType;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  /**
   * The amount of time for which the user can access On Demand content upon redeeming a promotion code. This parameter is required only when the streaming period isn&#39;t defined in the On Demand container, or when creating promotions where **access_type** is &#x60;vip&#x60; or **product_type** is &#x60;rent&#x60;.  Option descriptions:  * &#x60;1_week&#x60; - The user can access On Demand content for a maximum of 1 week after redeeming a promotion code.  * &#x60;1_year&#x60; - The user can access On Demand content for a maximum of 1 year after redeeming a promotion code.  * &#x60;24_hour&#x60; - The user can access On Demand content for a maximum of 24 hours after redeeming a promotion code.  * &#x60;30_day&#x60; - The user can access On Demand content for a maximum of 30 days after redeeming a promotion code.  * &#x60;3_month&#x60; - The user can access On Demand content for a maximum of 3 months after redeeming a promotion code.  * &#x60;48_hour&#x60; - The user can access On Demand content for a maximum of 48 hours after redeeming a promotion code.  * &#x60;6_month&#x60; - The user can access On Demand content for a maximum of 6 months after redeeming a promotion code.  * &#x60;72_hour&#x60; - The user can access On Demand content for a maximum of 72 hours after redeeming a promotion code. 
   */
  @JsonAdapter(StreamPeriodEnum.Adapter.class)
 public enum StreamPeriodEnum {
    _1_WEEK("1_week"),
    
    _1_YEAR("1_year"),
    
    _24_HOUR("24_hour"),
    
    _30_DAY("30_day"),
    
    _3_MONTH("3_month"),
    
    _48_HOUR("48_hour"),
    
    _6_MONTH("6_month"),
    
    _72_HOUR("72_hour");

    private String value;

    StreamPeriodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StreamPeriodEnum fromValue(String value) {
      for (StreamPeriodEnum b : StreamPeriodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StreamPeriodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StreamPeriodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StreamPeriodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StreamPeriodEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STREAM_PERIOD = "stream_period";
  @SerializedName(SERIALIZED_NAME_STREAM_PERIOD)
  private StreamPeriodEnum streamPeriod;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Double total;

  /**
   * The type of the promotion. When **access_type** is &#x60;vip&#x60;, the value for this parameter must be &#x60;batch&#x60;.  Option descriptions:  * &#x60;batch&#x60; - The promotion type that generates many random codes to use one time each.  * &#x60;single&#x60; - The promotion type that generates one code to use many times. 
   */
  @JsonAdapter(TypeEnum.Adapter.class)
 public enum TypeEnum {
    BATCH("batch"),
    
    SINGLE("single");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public OnDemandPromotionsAddPromotionToPageRequest() {
  }

  public OnDemandPromotionsAddPromotionToPageRequest accessType(AccessTypeEnum accessType) {
    
    
    
    
    this.accessType = accessType;
    return this;
  }

   /**
   * The promotion access type, which is a purchase option that isn&#39;t available in the On Demand container. Use the **download** and **stream_period** parameters to define additional characteristics for the &#x60;vip&#x60; type.  Option descriptions:  * &#x60;default&#x60; - The promotion grants a discount on the existing purchase options for an On Demand container.  * &#x60;vip&#x60; - The promotion grants free access to On Demand content before it&#39;s released. 
   * @return accessType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The promotion access type, which is a purchase option that isn't available in the On Demand container. Use the **download** and **stream_period** parameters to define additional characteristics for the `vip` type.  Option descriptions:  * `default` - The promotion grants a discount on the existing purchase options for an On Demand container.  * `vip` - The promotion grants free access to On Demand content before it's released. ")

  public AccessTypeEnum getAccessType() {
    return accessType;
  }


  public void setAccessType(AccessTypeEnum accessType) {
    
    
    
    this.accessType = accessType;
  }


  public OnDemandPromotionsAddPromotionToPageRequest code(String code) {
    
    
    
    
    this.code = code;
    return this;
  }

   /**
   * The promotion code. This parameter is ignored when the promotion type is &#x60;batch&#x60;.
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "sxsw2018", value = "The promotion code. This parameter is ignored when the promotion type is `batch`.")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    
    
    
    this.code = code;
  }


  public OnDemandPromotionsAddPromotionToPageRequest discountType(DiscountTypeEnum discountType) {
    
    
    
    
    this.discountType = discountType;
    return this;
  }

   /**
   * The type of discount offered by the promotion code. When **access_type** is &#x60;vip&#x60;, the value of this parameter must be &#x60;free&#x60;.  Option descriptions:  * &#x60;free&#x60; - The discount reduces the price to zero.  * &#x60;percent&#x60; - The discount reduces the price by the percentage defined in the **percent_off** parameter. 
   * @return discountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of discount offered by the promotion code. When **access_type** is `vip`, the value of this parameter must be `free`.  Option descriptions:  * `free` - The discount reduces the price to zero.  * `percent` - The discount reduces the price by the percentage defined in the **percent_off** parameter. ")

  public DiscountTypeEnum getDiscountType() {
    return discountType;
  }


  public void setDiscountType(DiscountTypeEnum discountType) {
    
    
    
    this.discountType = discountType;
  }


  public OnDemandPromotionsAddPromotionToPageRequest download(Boolean download) {
    
    
    
    
    this.download = download;
    return this;
  }

   /**
   * Whether the promotion grants download access to On Demand content. This field is required only when the download access hasn&#39;t been defined in the On Demand container, or when **access_type** is &#x60;vip&#x60; or **product_type** is &#x60;buy&#x60;.
   * @return download
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Whether the promotion grants download access to On Demand content. This field is required only when the download access hasn't been defined in the On Demand container, or when **access_type** is `vip` or **product_type** is `buy`.")

  public Boolean getDownload() {
    return download;
  }


  public void setDownload(Boolean download) {
    
    
    
    this.download = download;
  }


  public OnDemandPromotionsAddPromotionToPageRequest endTime(String endTime) {
    
    
    
    
    this.endTime = endTime;
    return this;
  }

   /**
   * The time at which the promotion period ends. If this parameter has no value, the promotion never expires.
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1526089920", value = "The time at which the promotion period ends. If this parameter has no value, the promotion never expires.")

  public String getEndTime() {
    return endTime;
  }


  public void setEndTime(String endTime) {
    
    
    
    this.endTime = endTime;
  }


  public OnDemandPromotionsAddPromotionToPageRequest label(String label) {
    
    
    
    
    this.label = label;
    return this;
  }

   /**
   * The description of the promotion when the promotion type is &#x60;batch&#x60;. This parameter is ignored when the promotion type is &#x60;single&#x60;.
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "sxsw", value = "The description of the promotion when the promotion type is `batch`. This parameter is ignored when the promotion type is `single`.")

  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    
    
    
    this.label = label;
  }


  public OnDemandPromotionsAddPromotionToPageRequest percentOff(Double percentOff) {
    
    
    
    
    this.percentOff = percentOff;
    return this;
  }

  public OnDemandPromotionsAddPromotionToPageRequest percentOff(Integer percentOff) {
    
    
    
    
    this.percentOff = percentOff.doubleValue();
    return this;
  }

   /**
   * The percentage of the discount. This parameter is applicable only when **discount_type** is &#x60;percent&#x60;.
   * @return percentOff
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "50", value = "The percentage of the discount. This parameter is applicable only when **discount_type** is `percent`.")

  public Double getPercentOff() {
    return percentOff;
  }


  public void setPercentOff(Double percentOff) {
    
    
    
    this.percentOff = percentOff;
  }


  public OnDemandPromotionsAddPromotionToPageRequest productType(ProductTypeEnum productType) {
    
    
    
    
    this.productType = productType;
    return this;
  }

   /**
   * The type of transaction to which the promotion applies. When **access_type** is &#x60;default&#x60;, the default value is &#x60;any&#x60;. When **access_type** is &#x60;vip&#x60;, the default value is &#x60;rent&#x60; and the only valid product types are &#x60;buy&#x60; and &#x60;rent&#x60;.  Option descriptions:  * &#x60;any&#x60; - The promotion applies to any transaction.  * &#x60;buy&#x60; - The promotion applies only to purchased products.  * &#x60;buy_episode&#x60; - The promotion applies only to purchased episodes.  * &#x60;rent&#x60; - The promotion applies only to rented products.  * &#x60;rent_episode&#x60; - The promotion applies only to rented episodes.  * &#x60;subscribe&#x60; - The promotion applies only to subscriptions. 
   * @return productType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of transaction to which the promotion applies. When **access_type** is `default`, the default value is `any`. When **access_type** is `vip`, the default value is `rent` and the only valid product types are `buy` and `rent`.  Option descriptions:  * `any` - The promotion applies to any transaction.  * `buy` - The promotion applies only to purchased products.  * `buy_episode` - The promotion applies only to purchased episodes.  * `rent` - The promotion applies only to rented products.  * `rent_episode` - The promotion applies only to rented episodes.  * `subscribe` - The promotion applies only to subscriptions. ")

  public ProductTypeEnum getProductType() {
    return productType;
  }


  public void setProductType(ProductTypeEnum productType) {
    
    
    
    this.productType = productType;
  }


  public OnDemandPromotionsAddPromotionToPageRequest startTime(String startTime) {
    
    
    
    
    this.startTime = startTime;
    return this;
  }

   /**
   * The time at which the promotion period starts. If this parameter has no value, the start time defaults to the time at which the promotion was created.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1526089920", value = "The time at which the promotion period starts. If this parameter has no value, the start time defaults to the time at which the promotion was created.")

  public String getStartTime() {
    return startTime;
  }


  public void setStartTime(String startTime) {
    
    
    
    this.startTime = startTime;
  }


  public OnDemandPromotionsAddPromotionToPageRequest streamPeriod(StreamPeriodEnum streamPeriod) {
    
    
    
    
    this.streamPeriod = streamPeriod;
    return this;
  }

   /**
   * The amount of time for which the user can access On Demand content upon redeeming a promotion code. This parameter is required only when the streaming period isn&#39;t defined in the On Demand container, or when creating promotions where **access_type** is &#x60;vip&#x60; or **product_type** is &#x60;rent&#x60;.  Option descriptions:  * &#x60;1_week&#x60; - The user can access On Demand content for a maximum of 1 week after redeeming a promotion code.  * &#x60;1_year&#x60; - The user can access On Demand content for a maximum of 1 year after redeeming a promotion code.  * &#x60;24_hour&#x60; - The user can access On Demand content for a maximum of 24 hours after redeeming a promotion code.  * &#x60;30_day&#x60; - The user can access On Demand content for a maximum of 30 days after redeeming a promotion code.  * &#x60;3_month&#x60; - The user can access On Demand content for a maximum of 3 months after redeeming a promotion code.  * &#x60;48_hour&#x60; - The user can access On Demand content for a maximum of 48 hours after redeeming a promotion code.  * &#x60;6_month&#x60; - The user can access On Demand content for a maximum of 6 months after redeeming a promotion code.  * &#x60;72_hour&#x60; - The user can access On Demand content for a maximum of 72 hours after redeeming a promotion code. 
   * @return streamPeriod
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The amount of time for which the user can access On Demand content upon redeeming a promotion code. This parameter is required only when the streaming period isn't defined in the On Demand container, or when creating promotions where **access_type** is `vip` or **product_type** is `rent`.  Option descriptions:  * `1_week` - The user can access On Demand content for a maximum of 1 week after redeeming a promotion code.  * `1_year` - The user can access On Demand content for a maximum of 1 year after redeeming a promotion code.  * `24_hour` - The user can access On Demand content for a maximum of 24 hours after redeeming a promotion code.  * `30_day` - The user can access On Demand content for a maximum of 30 days after redeeming a promotion code.  * `3_month` - The user can access On Demand content for a maximum of 3 months after redeeming a promotion code.  * `48_hour` - The user can access On Demand content for a maximum of 48 hours after redeeming a promotion code.  * `6_month` - The user can access On Demand content for a maximum of 6 months after redeeming a promotion code.  * `72_hour` - The user can access On Demand content for a maximum of 72 hours after redeeming a promotion code. ")

  public StreamPeriodEnum getStreamPeriod() {
    return streamPeriod;
  }


  public void setStreamPeriod(StreamPeriodEnum streamPeriod) {
    
    
    
    this.streamPeriod = streamPeriod;
  }


  public OnDemandPromotionsAddPromotionToPageRequest total(Double total) {
    
    
    
    
    this.total = total;
    return this;
  }

  public OnDemandPromotionsAddPromotionToPageRequest total(Integer total) {
    
    
    
    
    this.total = total.doubleValue();
    return this;
  }

   /**
   * When **type** is &#x60;batch&#x60;, the total number of promotions to generate. When **type** is &#x60;single&#x60;, the total number of uses of the promotion.
   * @return total
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "9", required = true, value = "When **type** is `batch`, the total number of promotions to generate. When **type** is `single`, the total number of uses of the promotion.")

  public Double getTotal() {
    return total;
  }


  public void setTotal(Double total) {
    
    
    
    this.total = total;
  }


  public OnDemandPromotionsAddPromotionToPageRequest type(TypeEnum type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * The type of the promotion. When **access_type** is &#x60;vip&#x60;, the value for this parameter must be &#x60;batch&#x60;.  Option descriptions:  * &#x60;batch&#x60; - The promotion type that generates many random codes to use one time each.  * &#x60;single&#x60; - The promotion type that generates one code to use many times. 
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of the promotion. When **access_type** is `vip`, the value for this parameter must be `batch`.  Option descriptions:  * `batch` - The promotion type that generates many random codes to use one time each.  * `single` - The promotion type that generates one code to use many times. ")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    
    
    
    this.type = type;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the OnDemandPromotionsAddPromotionToPageRequest instance itself
   */
  public OnDemandPromotionsAddPromotionToPageRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OnDemandPromotionsAddPromotionToPageRequest onDemandPromotionsAddPromotionToPageRequest = (OnDemandPromotionsAddPromotionToPageRequest) o;
    return Objects.equals(this.accessType, onDemandPromotionsAddPromotionToPageRequest.accessType) &&
        Objects.equals(this.code, onDemandPromotionsAddPromotionToPageRequest.code) &&
        Objects.equals(this.discountType, onDemandPromotionsAddPromotionToPageRequest.discountType) &&
        Objects.equals(this.download, onDemandPromotionsAddPromotionToPageRequest.download) &&
        Objects.equals(this.endTime, onDemandPromotionsAddPromotionToPageRequest.endTime) &&
        Objects.equals(this.label, onDemandPromotionsAddPromotionToPageRequest.label) &&
        Objects.equals(this.percentOff, onDemandPromotionsAddPromotionToPageRequest.percentOff) &&
        Objects.equals(this.productType, onDemandPromotionsAddPromotionToPageRequest.productType) &&
        Objects.equals(this.startTime, onDemandPromotionsAddPromotionToPageRequest.startTime) &&
        Objects.equals(this.streamPeriod, onDemandPromotionsAddPromotionToPageRequest.streamPeriod) &&
        Objects.equals(this.total, onDemandPromotionsAddPromotionToPageRequest.total) &&
        Objects.equals(this.type, onDemandPromotionsAddPromotionToPageRequest.type)&&
        Objects.equals(this.additionalProperties, onDemandPromotionsAddPromotionToPageRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessType, code, discountType, download, endTime, label, percentOff, productType, startTime, streamPeriod, total, type, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OnDemandPromotionsAddPromotionToPageRequest {\n");
    sb.append("    accessType: ").append(toIndentedString(accessType)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    discountType: ").append(toIndentedString(discountType)).append("\n");
    sb.append("    download: ").append(toIndentedString(download)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    percentOff: ").append(toIndentedString(percentOff)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    streamPeriod: ").append(toIndentedString(streamPeriod)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access_type");
    openapiFields.add("code");
    openapiFields.add("discount_type");
    openapiFields.add("download");
    openapiFields.add("end_time");
    openapiFields.add("label");
    openapiFields.add("percent_off");
    openapiFields.add("product_type");
    openapiFields.add("start_time");
    openapiFields.add("stream_period");
    openapiFields.add("total");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("download");
    openapiRequiredFields.add("stream_period");
    openapiRequiredFields.add("total");
    openapiRequiredFields.add("type");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OnDemandPromotionsAddPromotionToPageRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!OnDemandPromotionsAddPromotionToPageRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OnDemandPromotionsAddPromotionToPageRequest is not found in the empty JSON string", OnDemandPromotionsAddPromotionToPageRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OnDemandPromotionsAddPromotionToPageRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("access_type") != null && !jsonObj.get("access_type").isJsonNull()) && !jsonObj.get("access_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access_type").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("discount_type") != null && !jsonObj.get("discount_type").isJsonNull()) && !jsonObj.get("discount_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discount_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discount_type").toString()));
      }
      if ((jsonObj.get("end_time") != null && !jsonObj.get("end_time").isJsonNull()) && !jsonObj.get("end_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `end_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("end_time").toString()));
      }
      if ((jsonObj.get("label") != null && !jsonObj.get("label").isJsonNull()) && !jsonObj.get("label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label").toString()));
      }
      if ((jsonObj.get("product_type") != null && !jsonObj.get("product_type").isJsonNull()) && !jsonObj.get("product_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_type").toString()));
      }
      if ((jsonObj.get("start_time") != null && !jsonObj.get("start_time").isJsonNull()) && !jsonObj.get("start_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `start_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("start_time").toString()));
      }
      if (!jsonObj.get("stream_period").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stream_period` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stream_period").toString()));
      }
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OnDemandPromotionsAddPromotionToPageRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OnDemandPromotionsAddPromotionToPageRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OnDemandPromotionsAddPromotionToPageRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OnDemandPromotionsAddPromotionToPageRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<OnDemandPromotionsAddPromotionToPageRequest>() {
           @Override
           public void write(JsonWriter out, OnDemandPromotionsAddPromotionToPageRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public OnDemandPromotionsAddPromotionToPageRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             OnDemandPromotionsAddPromotionToPageRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OnDemandPromotionsAddPromotionToPageRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OnDemandPromotionsAddPromotionToPageRequest
  * @throws IOException if the JSON string is invalid with respect to OnDemandPromotionsAddPromotionToPageRequest
  */
  public static OnDemandPromotionsAddPromotionToPageRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OnDemandPromotionsAddPromotionToPageRequest.class);
  }

 /**
  * Convert an instance of OnDemandPromotionsAddPromotionToPageRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

