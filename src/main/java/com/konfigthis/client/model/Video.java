/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ApiApp;
import com.konfigthis.client.model.Category;
import com.konfigthis.client.model.DisabledVideoProperties;
import com.konfigthis.client.model.EditingSession;
import com.konfigthis.client.model.EmbedSettings;
import com.konfigthis.client.model.Picture;
import com.konfigthis.client.model.Play;
import com.konfigthis.client.model.Project;
import com.konfigthis.client.model.Tag;
import com.konfigthis.client.model.User;
import com.konfigthis.client.model.VersionTranscodeStatus;
import com.konfigthis.client.model.VideoContext;
import com.konfigthis.client.model.VideoFile;
import com.konfigthis.client.model.VideoMetadata;
import com.konfigthis.client.model.VideoPrivacy;
import com.konfigthis.client.model.VideoSpatial;
import com.konfigthis.client.model.VideoStats;
import com.konfigthis.client.model.VideoTranscode;
import com.konfigthis.client.model.VideoTranscript;
import com.konfigthis.client.model.VideoUpload;
import com.konfigthis.client.model.VideoUploader;
import com.konfigthis.client.model.VideoVod;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Video
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Video {
  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ALLOWED_PRIVACIES = "allowed_privacies";
  @SerializedName(SERIALIZED_NAME_ALLOWED_PRIVACIES)
  private List<String> allowedPrivacies = new ArrayList<>();

  public static final String SERIALIZED_NAME_APP = "app";
  @SerializedName(SERIALIZED_NAME_APP)
  private ApiApp app;

  public static final String SERIALIZED_NAME_CAN_MOVE_TO_PROJECT = "can_move_to_project";
  @SerializedName(SERIALIZED_NAME_CAN_MOVE_TO_PROJECT)
  private Boolean canMoveToProject;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<Category> categories = new ArrayList<>();

  /**
   * Gets or Sets contentRating
   */
  @JsonAdapter(String.Adapter.class)
 public enum String {

    private String value;

    String(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static String fromValue(String value) {
      for (String b : String.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<String> {
      @Override
      public void write(final JsonWriter jsonWriter, final String enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public String read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return String.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CONTENT_RATING = "content_rating";
  @SerializedName(SERIALIZED_NAME_CONTENT_RATING)
  private ContentRatingEnum contentRating = new ArrayList<>();

  /**
   * The video&#39;s high-level content rating class.  Option descriptions:  * &#x60;explicit&#x60; - The video contains one or more explicit content rating types.  * &#x60;safe&#x60; - The video contains no explicit content rating types.  * &#x60;unrated&#x60; - The video doesn&#39;t belong to a content rating class. 
   */
  @JsonAdapter(ContentRatingClassEnum.Adapter.class)
 public enum ContentRatingClassEnum {
    EXPLICIT("explicit"),
    
    SAFE("safe"),
    
    UNRATED("unrated");

    private String value;

    ContentRatingClassEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ContentRatingClassEnum fromValue(String value) {
      for (ContentRatingClassEnum b : ContentRatingClassEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ContentRatingClassEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ContentRatingClassEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ContentRatingClassEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ContentRatingClassEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CONTENT_RATING_CLASS = "content_rating_class";
  @SerializedName(SERIALIZED_NAME_CONTENT_RATING_CLASS)
  private ContentRatingClassEnum contentRatingClass;

  public static final String SERIALIZED_NAME_CONTEXT = "context";
  @SerializedName(SERIALIZED_NAME_CONTEXT)
  private VideoContext context;

  public static final String SERIALIZED_NAME_CREATED_TIME = "created_time";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private String createdTime;

  public static final String SERIALIZED_NAME_CUSTOM_URL = "custom_url";
  @SerializedName(SERIALIZED_NAME_CUSTOM_URL)
  private String customUrl;

  public static final String SERIALIZED_NAME_DESCRIPTION_HTML = "description_html";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_HTML)
  private String descriptionHtml;

  public static final String SERIALIZED_NAME_DESCRIPTION_RICH = "description_rich";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_RICH)
  private String descriptionRich;

  public static final String SERIALIZED_NAME_DISABLED_PROPERTIES = "disabled_properties";
  @SerializedName(SERIALIZED_NAME_DISABLED_PROPERTIES)
  private DisabledVideoProperties disabledProperties;

  public static final String SERIALIZED_NAME_DOWNLOAD = "download";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD)
  private List<VideoFile> download = new ArrayList<>();

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Double duration;

  public static final String SERIALIZED_NAME_EDIT_SESSION = "edit_session";
  @SerializedName(SERIALIZED_NAME_EDIT_SESSION)
  private EditingSession editSession;

  public static final String SERIALIZED_NAME_EMBED = "embed";
  @SerializedName(SERIALIZED_NAME_EMBED)
  private EmbedSettings embed;

  public static final String SERIALIZED_NAME_FILES = "files";
  @SerializedName(SERIALIZED_NAME_FILES)
  private List<VideoFile> files = new ArrayList<>();

  public static final String SERIALIZED_NAME_HAS_AUDIO = "has_audio";
  @SerializedName(SERIALIZED_NAME_HAS_AUDIO)
  private Boolean hasAudio;

  public static final String SERIALIZED_NAME_HAS_AUDIO_TRACKS = "has_audio_tracks";
  @SerializedName(SERIALIZED_NAME_HAS_AUDIO_TRACKS)
  private Boolean hasAudioTracks;

  public static final String SERIALIZED_NAME_HAS_CHAPTERS = "has_chapters";
  @SerializedName(SERIALIZED_NAME_HAS_CHAPTERS)
  private Boolean hasChapters;

  public static final String SERIALIZED_NAME_HAS_INTERACTIVE = "has_interactive";
  @SerializedName(SERIALIZED_NAME_HAS_INTERACTIVE)
  private Boolean hasInteractive;

  public static final String SERIALIZED_NAME_HAS_TEXT_TRACKS = "has_text_tracks";
  @SerializedName(SERIALIZED_NAME_HAS_TEXT_TRACKS)
  private Boolean hasTextTracks;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Double height;

  public static final String SERIALIZED_NAME_IS_COPYRIGHT_RESTRICTED = "is_copyright_restricted";
  @SerializedName(SERIALIZED_NAME_IS_COPYRIGHT_RESTRICTED)
  private Boolean isCopyrightRestricted;

  public static final String SERIALIZED_NAME_IS_FREE = "is_free";
  @SerializedName(SERIALIZED_NAME_IS_FREE)
  private Boolean isFree;

  public static final String SERIALIZED_NAME_IS_PLAYABLE = "is_playable";
  @SerializedName(SERIALIZED_NAME_IS_PLAYABLE)
  private Boolean isPlayable;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_LAST_USER_ACTION_EVENT_DATE = "last_user_action_event_date";
  @SerializedName(SERIALIZED_NAME_LAST_USER_ACTION_EVENT_DATE)
  private String lastUserActionEventDate;

  /**
   * The [Creative Commons](http://creativecommons.org/licenses/) license that the video is given under.  Option descriptions:  * &#x60;by&#x60; - The video is given under the Attribution license.  * &#x60;by-nc&#x60; - The video is given under the Attribution Non-Commercial license.  * &#x60;by-nc-nd&#x60; - The video is given under the Attribution Non-Commercial No Derivatives license.  * &#x60;by-nc-sa&#x60; - The video is given under the Attribution Non-Commercial Share Alike license.  * &#x60;by-nd&#x60; - The video is given under the Attribution No Derivatives license.  * &#x60;by-sa&#x60; - The video is given under the Attribution Share Alike license.  * &#x60;cc0&#x60; - The video is given under the Public Domain Dedication license. 
   */
  @JsonAdapter(LicenseEnum.Adapter.class)
 public enum LicenseEnum {
    BY("by"),
    
    BY_NC("by-nc"),
    
    BY_NC_ND("by-nc-nd"),
    
    BY_NC_SA("by-nc-sa"),
    
    BY_ND("by-nd"),
    
    BY_SA("by-sa"),
    
    CC0("cc0");

    private String value;

    LicenseEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LicenseEnum fromValue(String value) {
      for (LicenseEnum b : LicenseEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LicenseEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LicenseEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LicenseEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LicenseEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LICENSE = "license";
  @SerializedName(SERIALIZED_NAME_LICENSE)
  private LicenseEnum license;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_MANAGE_LINK = "manage_link";
  @SerializedName(SERIALIZED_NAME_MANAGE_LINK)
  private String manageLink;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private VideoMetadata metadata;

  public static final String SERIALIZED_NAME_MODIFIED_TIME = "modified_time";
  @SerializedName(SERIALIZED_NAME_MODIFIED_TIME)
  private String modifiedTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ORIGIN_VARIABLE_FRAME_RESOLUTION = "origin_variable_frame_resolution";
  @SerializedName(SERIALIZED_NAME_ORIGIN_VARIABLE_FRAME_RESOLUTION)
  private Boolean originVariableFrameResolution;

  public static final String SERIALIZED_NAME_PARENT_FOLDER = "parent_folder";
  @SerializedName(SERIALIZED_NAME_PARENT_FOLDER)
  private Project parentFolder;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PICTURES = "pictures";
  @SerializedName(SERIALIZED_NAME_PICTURES)
  private Picture pictures;

  public static final String SERIALIZED_NAME_PLAY = "play";
  @SerializedName(SERIALIZED_NAME_PLAY)
  private Play play;

  public static final String SERIALIZED_NAME_PLAYER_EMBED_URL = "player_embed_url";
  @SerializedName(SERIALIZED_NAME_PLAYER_EMBED_URL)
  private String playerEmbedUrl;

  public static final String SERIALIZED_NAME_PRIVACY = "privacy";
  @SerializedName(SERIALIZED_NAME_PRIVACY)
  private VideoPrivacy privacy;

  public static final String SERIALIZED_NAME_RATING_MOD_LOCKED = "rating_mod_locked";
  @SerializedName(SERIALIZED_NAME_RATING_MOD_LOCKED)
  private Boolean ratingModLocked;

  public static final String SERIALIZED_NAME_RELEASE_TIME = "release_time";
  @SerializedName(SERIALIZED_NAME_RELEASE_TIME)
  private String releaseTime;

  public static final String SERIALIZED_NAME_RESOURCE_KEY = "resource_key";
  @SerializedName(SERIALIZED_NAME_RESOURCE_KEY)
  private String resourceKey;

  public static final String SERIALIZED_NAME_SHOW_REVIEW_PAGE = "show_review_page";
  @SerializedName(SERIALIZED_NAME_SHOW_REVIEW_PAGE)
  private Boolean showReviewPage;

  public static final String SERIALIZED_NAME_SHOW_SVV_FOOTER_BANNER = "show_svv_footer_banner";
  @SerializedName(SERIALIZED_NAME_SHOW_SVV_FOOTER_BANNER)
  private Boolean showSvvFooterBanner;

  public static final String SERIALIZED_NAME_SHOW_SVV_TIMECODED_COMMENTS = "show_svv_timecoded_comments";
  @SerializedName(SERIALIZED_NAME_SHOW_SVV_TIMECODED_COMMENTS)
  private Boolean showSvvTimecodedComments;

  public static final String SERIALIZED_NAME_SPATIAL = "spatial";
  @SerializedName(SERIALIZED_NAME_SPATIAL)
  private VideoSpatial spatial;

  public static final String SERIALIZED_NAME_STATS = "stats";
  @SerializedName(SERIALIZED_NAME_STATS)
  private VideoStats stats;

  /**
   * The status code for the availability of the video.  Option descriptions:  * &#x60;available&#x60; - The video is available.  * &#x60;quota_exceeded&#x60; - The user&#39;s weekly upload quota is exceeded with this video.  * &#x60;total_cap_exceeded&#x60; - The user&#39;s total storage limit is exceeded with this video.  * &#x60;transcode_starting&#x60; - Transcoding is starting for the video.  * &#x60;transcoding&#x60; - Transcoding has started and is currently underway for the video.  * &#x60;transcoding_error&#x60; - There was an error in transcoding the video.  * &#x60;unavailable&#x60; - The video is unavailable.  * &#x60;uploading&#x60; - The video is being uploaded.  * &#x60;uploading_error&#x60; - There was an error in uploading the video. 
   */
  @JsonAdapter(StatusEnum.Adapter.class)
 public enum StatusEnum {
    AVAILABLE("available"),
    
    QUOTA_EXCEEDED("quota_exceeded"),
    
    TOTAL_CAP_EXCEEDED("total_cap_exceeded"),
    
    TRANSCODE_STARTING("transcode_starting"),
    
    TRANSCODING("transcoding"),
    
    TRANSCODING_ERROR("transcoding_error"),
    
    UNAVAILABLE("unavailable"),
    
    UPLOADING("uploading"),
    
    UPLOADING_ERROR("uploading_error");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_TRANSCODE = "transcode";
  @SerializedName(SERIALIZED_NAME_TRANSCODE)
  private VideoTranscode transcode;

  public static final String SERIALIZED_NAME_TRANSCRIPT = "transcript";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPT)
  private VideoTranscript transcript;

  /**
   * The type of the video.  Option descriptions:  * &#x60;live&#x60; - The video is or was an event.  * &#x60;stock&#x60; - The video is a Vimeo Stock video.  * &#x60;video&#x60; - The video is a standard Vimeo video. 
   */
  @JsonAdapter(TypeEnum.Adapter.class)
 public enum TypeEnum {
    LIVE("live"),
    
    STOCK("stock"),
    
    VIDEO("video");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_UPLOAD = "upload";
  @SerializedName(SERIALIZED_NAME_UPLOAD)
  private VideoUpload upload;

  public static final String SERIALIZED_NAME_UPLOADER = "uploader";
  @SerializedName(SERIALIZED_NAME_UPLOADER)
  private VideoUploader uploader;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private User user;

  public static final String SERIALIZED_NAME_VERSION_TRANSCODE_STATUS = "version_transcode_status";
  @SerializedName(SERIALIZED_NAME_VERSION_TRANSCODE_STATUS)
  private VersionTranscodeStatus versionTranscodeStatus;

  public static final String SERIALIZED_NAME_VOD = "vod";
  @SerializedName(SERIALIZED_NAME_VOD)
  private VideoVod vod;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Double width;

  public Video() {
  }

  public Video tags(List<Tag> tags) {
    
    
    
    
    this.tags = tags;
    return this;
  }

  public Video addTagsItem(Tag tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * An array of all tags assigned to the video.
   * @return tags
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An array of all tags assigned to the video.")

  public List<Tag> getTags() {
    return tags;
  }


  public void setTags(List<Tag> tags) {
    
    
    
    this.tags = tags;
  }


  public Video description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A brief explanation of the video&#39;s content.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "A celebration of 10 years of Staff Picks.", required = true, value = "A brief explanation of the video's content.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public Video allowedPrivacies(List<String> allowedPrivacies) {
    
    
    
    
    this.allowedPrivacies = allowedPrivacies;
    return this;
  }

  public Video addAllowedPrivaciesItem(String allowedPrivaciesItem) {
    this.allowedPrivacies.add(allowedPrivaciesItem);
    return this;
  }

   /**
   * An array of privacy settings supported for this video and the requesting user.
   * @return allowedPrivacies
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An array of privacy settings supported for this video and the requesting user.")

  public List<String> getAllowedPrivacies() {
    return allowedPrivacies;
  }


  public void setAllowedPrivacies(List<String> allowedPrivacies) {
    
    
    
    this.allowedPrivacies = allowedPrivacies;
  }


  public Video app(ApiApp app) {
    
    
    
    
    this.app = app;
    return this;
  }

   /**
   * The API application associated with the video owner&#39;s token.
   * @return app
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The API application associated with the video owner's token.")

  public ApiApp getApp() {
    return app;
  }


  public void setApp(ApiApp app) {
    
    
    
    this.app = app;
  }


  public Video canMoveToProject(Boolean canMoveToProject) {
    
    
    
    
    this.canMoveToProject = canMoveToProject;
    return this;
  }

   /**
   * Whether the video can be moved to a folder. This data requires a bearer token with the &#x60;private&#x60; scope.
   * @return canMoveToProject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Whether the video can be moved to a folder. This data requires a bearer token with the `private` scope.")

  public Boolean getCanMoveToProject() {
    return canMoveToProject;
  }


  public void setCanMoveToProject(Boolean canMoveToProject) {
    
    
    
    this.canMoveToProject = canMoveToProject;
  }


  public Video categories(List<Category> categories) {
    
    
    
    
    this.categories = categories;
    return this;
  }

  public Video addCategoriesItem(Category categoriesItem) {
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * The categories that the video belongs to.
   * @return categories
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The categories that the video belongs to.")

  public List<Category> getCategories() {
    return categories;
  }


  public void setCategories(List<Category> categories) {
    
    
    
    this.categories = categories;
  }


  public Video contentRating(ContentRatingEnum contentRating) {
    
    
    
    
    this.contentRating = contentRating;
    return this;
  }

  public Video addContentRatingItem(String contentRatingItem) {
    this.contentRating.add(contentRatingItem);
    return this;
  }

   /**
   * The video&#39;s granular content rating.  Option descriptions:  * &#x60;advertisement&#x60; - The video contains advertisements.  * &#x60;drugs&#x60; - The video contains drug or alcohol use.  * &#x60;language&#x60; - The video contains profanity or sexually suggestive content.  * &#x60;nudity&#x60; - The video contains nudity.  * &#x60;safe&#x60; - The video is safe for all audiences.  * &#x60;unrated&#x60; - The video hasn&#39;t been rated.  * &#x60;violence&#x60; - The video contains violence. 
   * @return contentRating
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The video's granular content rating.  Option descriptions:  * `advertisement` - The video contains advertisements.  * `drugs` - The video contains drug or alcohol use.  * `language` - The video contains profanity or sexually suggestive content.  * `nudity` - The video contains nudity.  * `safe` - The video is safe for all audiences.  * `unrated` - The video hasn't been rated.  * `violence` - The video contains violence. ")

  public ContentRatingEnum getContentRating() {
    return contentRating;
  }


  public void setContentRating(ContentRatingEnum contentRating) {
    
    
    
    this.contentRating = contentRating;
  }


  public Video contentRatingClass(ContentRatingClassEnum contentRatingClass) {
    
    
    
    
    this.contentRatingClass = contentRatingClass;
    return this;
  }

   /**
   * The video&#39;s high-level content rating class.  Option descriptions:  * &#x60;explicit&#x60; - The video contains one or more explicit content rating types.  * &#x60;safe&#x60; - The video contains no explicit content rating types.  * &#x60;unrated&#x60; - The video doesn&#39;t belong to a content rating class. 
   * @return contentRatingClass
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "EXPLICIT", required = true, value = "The video's high-level content rating class.  Option descriptions:  * `explicit` - The video contains one or more explicit content rating types.  * `safe` - The video contains no explicit content rating types.  * `unrated` - The video doesn't belong to a content rating class. ")

  public ContentRatingClassEnum getContentRatingClass() {
    return contentRatingClass;
  }


  public void setContentRatingClass(ContentRatingClassEnum contentRatingClass) {
    
    
    
    this.contentRatingClass = contentRatingClass;
  }


  public Video context(VideoContext context) {
    
    
    
    
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VideoContext getContext() {
    return context;
  }


  public void setContext(VideoContext context) {
    
    
    
    this.context = context;
  }


  public Video createdTime(String createdTime) {
    
    
    
    
    this.createdTime = createdTime;
    return this;
  }

   /**
   * The time in ISO 8601 format when the video was created.
   * @return createdTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2018-03-05T21:04:47+00:00", required = true, value = "The time in ISO 8601 format when the video was created.")

  public String getCreatedTime() {
    return createdTime;
  }


  public void setCreatedTime(String createdTime) {
    
    
    
    this.createdTime = createdTime;
  }


  public Video customUrl(String customUrl) {
    
    
    
    
    this.customUrl = customUrl;
    return this;
  }

   /**
   * The custom URL of the video.
   * @return customUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The custom URL of the video.")

  public String getCustomUrl() {
    return customUrl;
  }


  public void setCustomUrl(String customUrl) {
    
    
    
    this.customUrl = customUrl;
  }


  public Video descriptionHtml(String descriptionHtml) {
    
    
    
    
    this.descriptionHtml = descriptionHtml;
    return this;
  }

   /**
   * A brief explanation of the video&#39;s content, formatted with HTML entities.
   * @return descriptionHtml
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "<p>A celebration of <b>10 years</b> of Staff Picks.</p>", required = true, value = "A brief explanation of the video's content, formatted with HTML entities.")

  public String getDescriptionHtml() {
    return descriptionHtml;
  }


  public void setDescriptionHtml(String descriptionHtml) {
    
    
    
    this.descriptionHtml = descriptionHtml;
  }


  public Video descriptionRich(String descriptionRich) {
    
    
    
    
    this.descriptionRich = descriptionRich;
    return this;
  }

   /**
   * A JSON representation of the description.
   * @return descriptionRich
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"ops\":[{\"insert\": \"Text\"}]}", value = "A JSON representation of the description.")

  public String getDescriptionRich() {
    return descriptionRich;
  }


  public void setDescriptionRich(String descriptionRich) {
    
    
    
    this.descriptionRich = descriptionRich;
  }


  public Video disabledProperties(DisabledVideoProperties disabledProperties) {
    
    
    
    
    this.disabledProperties = disabledProperties;
    return this;
  }

   /**
   * Information about what features may be disabled on the video.
   * @return disabledProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Information about what features may be disabled on the video.")

  public DisabledVideoProperties getDisabledProperties() {
    return disabledProperties;
  }


  public void setDisabledProperties(DisabledVideoProperties disabledProperties) {
    
    
    
    this.disabledProperties = disabledProperties;
  }


  public Video download(List<VideoFile> download) {
    
    
    
    
    this.download = download;
    return this;
  }

  public Video addDownloadItem(VideoFile downloadItem) {
    this.download.add(downloadItem);
    return this;
  }

   /**
   * The list of downloadable files for the video. This data requires a bearer token with the &#x60;private&#x60; scope.
   * @return download
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The list of downloadable files for the video. This data requires a bearer token with the `private` scope.")

  public List<VideoFile> getDownload() {
    return download;
  }


  public void setDownload(List<VideoFile> download) {
    
    
    
    this.download = download;
  }


  public Video duration(Double duration) {
    
    
    
    
    this.duration = duration;
    return this;
  }

  public Video duration(Integer duration) {
    
    
    
    
    this.duration = duration.doubleValue();
    return this;
  }

   /**
   * The video&#39;s duration in seconds. A value of &#x60;0&#x60; indicates the duration hasn&#39;t been calculated yet.
   * @return duration
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "81", required = true, value = "The video's duration in seconds. A value of `0` indicates the duration hasn't been calculated yet.")

  public Double getDuration() {
    return duration;
  }


  public void setDuration(Double duration) {
    
    
    
    this.duration = duration;
  }


  public Video editSession(EditingSession editSession) {
    
    
    
    
    this.editSession = editSession;
    return this;
  }

   /**
   * Information about the video&#39;s Vimeo Create editing session. This data requires a bearer token with the &#x60;private&#x60; scope.
   * @return editSession
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Information about the video's Vimeo Create editing session. This data requires a bearer token with the `private` scope.")

  public EditingSession getEditSession() {
    return editSession;
  }


  public void setEditSession(EditingSession editSession) {
    
    
    
    this.editSession = editSession;
  }


  public Video embed(EmbedSettings embed) {
    
    
    
    
    this.embed = embed;
    return this;
  }

   /**
   * Information about embedding the video.
   * @return embed
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Information about embedding the video.")

  public EmbedSettings getEmbed() {
    return embed;
  }


  public void setEmbed(EmbedSettings embed) {
    
    
    
    this.embed = embed;
  }


  public Video files(List<VideoFile> files) {
    
    
    
    
    this.files = files;
    return this;
  }

  public Video addFilesItem(VideoFile filesItem) {
    this.files.add(filesItem);
    return this;
  }

   /**
   * The list of files for the video. This data requires a bearer token with the &#x60;private&#x60; scope.
   * @return files
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The list of files for the video. This data requires a bearer token with the `private` scope.")

  public List<VideoFile> getFiles() {
    return files;
  }


  public void setFiles(List<VideoFile> files) {
    
    
    
    this.files = files;
  }


  public Video hasAudio(Boolean hasAudio) {
    
    
    
    
    this.hasAudio = hasAudio;
    return this;
  }

   /**
   * Whether the video has audio.
   * @return hasAudio
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Whether the video has audio.")

  public Boolean getHasAudio() {
    return hasAudio;
  }


  public void setHasAudio(Boolean hasAudio) {
    
    
    
    this.hasAudio = hasAudio;
  }


  public Video hasAudioTracks(Boolean hasAudioTracks) {
    
    
    
    
    this.hasAudioTracks = hasAudioTracks;
    return this;
  }

   /**
   * Whether the video has alternate audio tracks.
   * @return hasAudioTracks
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Whether the video has alternate audio tracks.")

  public Boolean getHasAudioTracks() {
    return hasAudioTracks;
  }


  public void setHasAudioTracks(Boolean hasAudioTracks) {
    
    
    
    this.hasAudioTracks = hasAudioTracks;
  }


  public Video hasChapters(Boolean hasChapters) {
    
    
    
    
    this.hasChapters = hasChapters;
    return this;
  }

   /**
   * Whether the video has chapters.
   * @return hasChapters
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Whether the video has chapters.")

  public Boolean getHasChapters() {
    return hasChapters;
  }


  public void setHasChapters(Boolean hasChapters) {
    
    
    
    this.hasChapters = hasChapters;
  }


  public Video hasInteractive(Boolean hasInteractive) {
    
    
    
    
    this.hasInteractive = hasInteractive;
    return this;
  }

   /**
   * Whether the video has interactive capability.
   * @return hasInteractive
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "Whether the video has interactive capability.")

  public Boolean getHasInteractive() {
    return hasInteractive;
  }


  public void setHasInteractive(Boolean hasInteractive) {
    
    
    
    this.hasInteractive = hasInteractive;
  }


  public Video hasTextTracks(Boolean hasTextTracks) {
    
    
    
    
    this.hasTextTracks = hasTextTracks;
    return this;
  }

   /**
   * Whether the video has text tracks.
   * @return hasTextTracks
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Whether the video has text tracks.")

  public Boolean getHasTextTracks() {
    return hasTextTracks;
  }


  public void setHasTextTracks(Boolean hasTextTracks) {
    
    
    
    this.hasTextTracks = hasTextTracks;
  }


  public Video height(Double height) {
    
    
    
    
    this.height = height;
    return this;
  }

  public Video height(Integer height) {
    
    
    
    
    this.height = height.doubleValue();
    return this;
  }

   /**
   * The video&#39;s height in pixels.
   * @return height
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1080", required = true, value = "The video's height in pixels.")

  public Double getHeight() {
    return height;
  }


  public void setHeight(Double height) {
    
    
    
    this.height = height;
  }


  public Video isCopyrightRestricted(Boolean isCopyrightRestricted) {
    
    
    
    
    this.isCopyrightRestricted = isCopyrightRestricted;
    return this;
  }

   /**
   * Whether the video is privacy restricted due to a copyright infringement. This data requires a bearer token with the &#x60;private&#x60; scope.
   * @return isCopyrightRestricted
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Whether the video is privacy restricted due to a copyright infringement. This data requires a bearer token with the `private` scope.")

  public Boolean getIsCopyrightRestricted() {
    return isCopyrightRestricted;
  }


  public void setIsCopyrightRestricted(Boolean isCopyrightRestricted) {
    
    
    
    this.isCopyrightRestricted = isCopyrightRestricted;
  }


  public Video isFree(Boolean isFree) {
    
    
    
    
    this.isFree = isFree;
    return this;
  }

   /**
   * Whether the video is a free Vimeo Stock video.
   * @return isFree
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether the video is a free Vimeo Stock video.")

  public Boolean getIsFree() {
    return isFree;
  }


  public void setIsFree(Boolean isFree) {
    
    
    
    this.isFree = isFree;
  }


  public Video isPlayable(Boolean isPlayable) {
    
    
    
    
    this.isPlayable = isPlayable;
    return this;
  }

   /**
   * Whether the video is playable.
   * @return isPlayable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Whether the video is playable.")

  public Boolean getIsPlayable() {
    return isPlayable;
  }


  public void setIsPlayable(Boolean isPlayable) {
    
    
    
    this.isPlayable = isPlayable;
  }


  public Video language(String language) {
    
    
    
    
    this.language = language;
    return this;
  }

   /**
   * The video&#39;s primary language.
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en-US", required = true, value = "The video's primary language.")

  public String getLanguage() {
    return language;
  }


  public void setLanguage(String language) {
    
    
    
    this.language = language;
  }


  public Video lastUserActionEventDate(String lastUserActionEventDate) {
    
    
    
    
    this.lastUserActionEventDate = lastUserActionEventDate;
    return this;
  }

   /**
   * The time in ISO 8601 format when the user last modified the video.
   * @return lastUserActionEventDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-03-21T23:08:22+00:00", value = "The time in ISO 8601 format when the user last modified the video.")

  public String getLastUserActionEventDate() {
    return lastUserActionEventDate;
  }


  public void setLastUserActionEventDate(String lastUserActionEventDate) {
    
    
    
    this.lastUserActionEventDate = lastUserActionEventDate;
  }


  public Video license(LicenseEnum license) {
    
    
    
    
    this.license = license;
    return this;
  }

   /**
   * The [Creative Commons](http://creativecommons.org/licenses/) license that the video is given under.  Option descriptions:  * &#x60;by&#x60; - The video is given under the Attribution license.  * &#x60;by-nc&#x60; - The video is given under the Attribution Non-Commercial license.  * &#x60;by-nc-nd&#x60; - The video is given under the Attribution Non-Commercial No Derivatives license.  * &#x60;by-nc-sa&#x60; - The video is given under the Attribution Non-Commercial Share Alike license.  * &#x60;by-nd&#x60; - The video is given under the Attribution No Derivatives license.  * &#x60;by-sa&#x60; - The video is given under the Attribution Share Alike license.  * &#x60;cc0&#x60; - The video is given under the Public Domain Dedication license. 
   * @return license
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "BY", required = true, value = "The [Creative Commons](http://creativecommons.org/licenses/) license that the video is given under.  Option descriptions:  * `by` - The video is given under the Attribution license.  * `by-nc` - The video is given under the Attribution Non-Commercial license.  * `by-nc-nd` - The video is given under the Attribution Non-Commercial No Derivatives license.  * `by-nc-sa` - The video is given under the Attribution Non-Commercial Share Alike license.  * `by-nd` - The video is given under the Attribution No Derivatives license.  * `by-sa` - The video is given under the Attribution Share Alike license.  * `cc0` - The video is given under the Public Domain Dedication license. ")

  public LicenseEnum getLicense() {
    return license;
  }


  public void setLicense(LicenseEnum license) {
    
    
    
    this.license = license;
  }


  public Video link(String link) {
    
    
    
    
    this.link = link;
    return this;
  }

   /**
   * The link to the video.
   * @return link
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "https://vimeo.com/258684937", required = true, value = "The link to the video.")

  public String getLink() {
    return link;
  }


  public void setLink(String link) {
    
    
    
    this.link = link;
  }


  public Video manageLink(String manageLink) {
    
    
    
    
    this.manageLink = manageLink;
    return this;
  }

   /**
   * The link to the video management page. This data requires a bearer token with the &#x60;private&#x60; scope.
   * @return manageLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/manage/videos/258684937", value = "The link to the video management page. This data requires a bearer token with the `private` scope.")

  public String getManageLink() {
    return manageLink;
  }


  public void setManageLink(String manageLink) {
    
    
    
    this.manageLink = manageLink;
  }


  public Video metadata(VideoMetadata metadata) {
    
    
    
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VideoMetadata getMetadata() {
    return metadata;
  }


  public void setMetadata(VideoMetadata metadata) {
    
    
    
    this.metadata = metadata;
  }


  public Video modifiedTime(String modifiedTime) {
    
    
    
    
    this.modifiedTime = modifiedTime;
    return this;
  }

   /**
   * The time in ISO 8601 format when the video metadata was last modified.
   * @return modifiedTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2018-09-16T09:02:40+00:00", required = true, value = "The time in ISO 8601 format when the video metadata was last modified.")

  public String getModifiedTime() {
    return modifiedTime;
  }


  public void setModifiedTime(String modifiedTime) {
    
    
    
    this.modifiedTime = modifiedTime;
  }


  public Video name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The video&#39;s title.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Celebrating 10 Years of Staff Picks", required = true, value = "The video's title.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public Video originVariableFrameResolution(Boolean originVariableFrameResolution) {
    
    
    
    
    this.originVariableFrameResolution = originVariableFrameResolution;
    return this;
  }

   /**
   * Whether the video has unified resolution. If the value of this field is &#x60;false&#x60;, the video requires transcoding.
   * @return originVariableFrameResolution
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "Whether the video has unified resolution. If the value of this field is `false`, the video requires transcoding.")

  public Boolean getOriginVariableFrameResolution() {
    return originVariableFrameResolution;
  }


  public void setOriginVariableFrameResolution(Boolean originVariableFrameResolution) {
    
    
    
    this.originVariableFrameResolution = originVariableFrameResolution;
  }


  public Video parentFolder(Project parentFolder) {
    
    
    
    
    this.parentFolder = parentFolder;
    return this;
  }

   /**
   * Information about the folder that contains the video.
   * @return parentFolder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Information about the folder that contains the video.")

  public Project getParentFolder() {
    return parentFolder;
  }


  public void setParentFolder(Project parentFolder) {
    
    
    
    this.parentFolder = parentFolder;
  }


  public Video password(String password) {
    
    
    
    
    this.password = password;
    return this;
  }

   /**
   * The privacy-enabled password to watch the video. Only the video&#39;s owner and team members with permission can access the video&#39;s password. This data requires a bearer token with the &#x60;private&#x60; scope.
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "hunter1", value = "The privacy-enabled password to watch the video. Only the video's owner and team members with permission can access the video's password. This data requires a bearer token with the `private` scope.")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    
    
    
    this.password = password;
  }


  public Video pictures(Picture pictures) {
    
    
    
    
    this.pictures = pictures;
    return this;
  }

   /**
   * The video&#39;s active picture.
   * @return pictures
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The video's active picture.")

  public Picture getPictures() {
    return pictures;
  }


  public void setPictures(Picture pictures) {
    
    
    
    this.pictures = pictures;
  }


  public Video play(Play play) {
    
    
    
    
    this.play = play;
    return this;
  }

   /**
   * The &#x60;Play&#x60; representation.
   * @return play
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The `Play` representation.")

  public Play getPlay() {
    return play;
  }


  public void setPlay(Play play) {
    
    
    
    this.play = play;
  }


  public Video playerEmbedUrl(String playerEmbedUrl) {
    
    
    
    
    this.playerEmbedUrl = playerEmbedUrl;
    return this;
  }

   /**
   * The video&#39;s player embed URL.
   * @return playerEmbedUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "https://player.vimeo.com/video/258684937?h=c893f64dd6", required = true, value = "The video's player embed URL.")

  public String getPlayerEmbedUrl() {
    return playerEmbedUrl;
  }


  public void setPlayerEmbedUrl(String playerEmbedUrl) {
    
    
    
    this.playerEmbedUrl = playerEmbedUrl;
  }


  public Video privacy(VideoPrivacy privacy) {
    
    
    
    
    this.privacy = privacy;
    return this;
  }

   /**
   * Get privacy
   * @return privacy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VideoPrivacy getPrivacy() {
    return privacy;
  }


  public void setPrivacy(VideoPrivacy privacy) {
    
    
    
    this.privacy = privacy;
  }


  public Video ratingModLocked(Boolean ratingModLocked) {
    
    
    
    
    this.ratingModLocked = ratingModLocked;
    return this;
  }

   /**
   * Whether the video&#39;s content rating is locked by a mod.
   * @return ratingModLocked
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Whether the video's content rating is locked by a mod.")

  public Boolean getRatingModLocked() {
    return ratingModLocked;
  }


  public void setRatingModLocked(Boolean ratingModLocked) {
    
    
    
    this.ratingModLocked = ratingModLocked;
  }


  public Video releaseTime(String releaseTime) {
    
    
    
    
    this.releaseTime = releaseTime;
    return this;
  }

   /**
   * The time in ISO 8601 format when the video was released.
   * @return releaseTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2018-03-05T21:04:47+00:00", required = true, value = "The time in ISO 8601 format when the video was released.")

  public String getReleaseTime() {
    return releaseTime;
  }


  public void setReleaseTime(String releaseTime) {
    
    
    
    this.releaseTime = releaseTime;
  }


  public Video resourceKey(String resourceKey) {
    
    
    
    
    this.resourceKey = resourceKey;
    return this;
  }

   /**
   * The resource key string of the video.
   * @return resourceKey
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "bac1033deba2310ebba2caec33c23e4beea67aba", required = true, value = "The resource key string of the video.")

  public String getResourceKey() {
    return resourceKey;
  }


  public void setResourceKey(String resourceKey) {
    
    
    
    this.resourceKey = resourceKey;
  }


  public Video showReviewPage(Boolean showReviewPage) {
    
    
    
    
    this.showReviewPage = showReviewPage;
    return this;
  }

   /**
   * Whether to show the &#x60;Review&#x60; button on single video view recipient pages. This data requires a bearer token with the &#x60;private&#x60; scope.
   * @return showReviewPage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Whether to show the `Review` button on single video view recipient pages. This data requires a bearer token with the `private` scope.")

  public Boolean getShowReviewPage() {
    return showReviewPage;
  }


  public void setShowReviewPage(Boolean showReviewPage) {
    
    
    
    this.showReviewPage = showReviewPage;
  }


  public Video showSvvFooterBanner(Boolean showSvvFooterBanner) {
    
    
    
    
    this.showSvvFooterBanner = showSvvFooterBanner;
    return this;
  }

   /**
   * Whether to show the single video view footer banner on recipient pages. This data requires a bearer token with the &#x60;private&#x60; scope.
   * @return showSvvFooterBanner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Whether to show the single video view footer banner on recipient pages. This data requires a bearer token with the `private` scope.")

  public Boolean getShowSvvFooterBanner() {
    return showSvvFooterBanner;
  }


  public void setShowSvvFooterBanner(Boolean showSvvFooterBanner) {
    
    
    
    this.showSvvFooterBanner = showSvvFooterBanner;
  }


  public Video showSvvTimecodedComments(Boolean showSvvTimecodedComments) {
    
    
    
    
    this.showSvvTimecodedComments = showSvvTimecodedComments;
    return this;
  }

   /**
   * Whether to enable timecoded comments on the single video view recipient page. This data requires a bearer token with the &#x60;private&#x60; scope.
   * @return showSvvTimecodedComments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Whether to enable timecoded comments on the single video view recipient page. This data requires a bearer token with the `private` scope.")

  public Boolean getShowSvvTimecodedComments() {
    return showSvvTimecodedComments;
  }


  public void setShowSvvTimecodedComments(Boolean showSvvTimecodedComments) {
    
    
    
    this.showSvvTimecodedComments = showSvvTimecodedComments;
  }


  public Video spatial(VideoSpatial spatial) {
    
    
    
    
    this.spatial = spatial;
    return this;
  }

   /**
   * Get spatial
   * @return spatial
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VideoSpatial getSpatial() {
    return spatial;
  }


  public void setSpatial(VideoSpatial spatial) {
    
    
    
    this.spatial = spatial;
  }


  public Video stats(VideoStats stats) {
    
    
    
    
    this.stats = stats;
    return this;
  }

   /**
   * Get stats
   * @return stats
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VideoStats getStats() {
    return stats;
  }


  public void setStats(VideoStats stats) {
    
    
    
    this.stats = stats;
  }


  public Video status(StatusEnum status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * The status code for the availability of the video.  Option descriptions:  * &#x60;available&#x60; - The video is available.  * &#x60;quota_exceeded&#x60; - The user&#39;s weekly upload quota is exceeded with this video.  * &#x60;total_cap_exceeded&#x60; - The user&#39;s total storage limit is exceeded with this video.  * &#x60;transcode_starting&#x60; - Transcoding is starting for the video.  * &#x60;transcoding&#x60; - Transcoding has started and is currently underway for the video.  * &#x60;transcoding_error&#x60; - There was an error in transcoding the video.  * &#x60;unavailable&#x60; - The video is unavailable.  * &#x60;uploading&#x60; - The video is being uploaded.  * &#x60;uploading_error&#x60; - There was an error in uploading the video. 
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "AVAILABLE", required = true, value = "The status code for the availability of the video.  Option descriptions:  * `available` - The video is available.  * `quota_exceeded` - The user's weekly upload quota is exceeded with this video.  * `total_cap_exceeded` - The user's total storage limit is exceeded with this video.  * `transcode_starting` - Transcoding is starting for the video.  * `transcoding` - Transcoding has started and is currently underway for the video.  * `transcoding_error` - There was an error in transcoding the video.  * `unavailable` - The video is unavailable.  * `uploading` - The video is being uploaded.  * `uploading_error` - There was an error in uploading the video. ")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    
    
    
    this.status = status;
  }


  public Video transcode(VideoTranscode transcode) {
    
    
    
    
    this.transcode = transcode;
    return this;
  }

   /**
   * Get transcode
   * @return transcode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoTranscode getTranscode() {
    return transcode;
  }


  public void setTranscode(VideoTranscode transcode) {
    
    
    
    this.transcode = transcode;
  }


  public Video transcript(VideoTranscript transcript) {
    
    
    
    
    this.transcript = transcript;
    return this;
  }

   /**
   * Get transcript
   * @return transcript
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoTranscript getTranscript() {
    return transcript;
  }


  public void setTranscript(VideoTranscript transcript) {
    
    
    
    this.transcript = transcript;
  }


  public Video type(TypeEnum type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * The type of the video.  Option descriptions:  * &#x60;live&#x60; - The video is or was an event.  * &#x60;stock&#x60; - The video is a Vimeo Stock video.  * &#x60;video&#x60; - The video is a standard Vimeo video. 
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "VIDEO", required = true, value = "The type of the video.  Option descriptions:  * `live` - The video is or was an event.  * `stock` - The video is a Vimeo Stock video.  * `video` - The video is a standard Vimeo video. ")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    
    
    
    this.type = type;
  }


  public Video upload(VideoUpload upload) {
    
    
    
    
    this.upload = upload;
    return this;
  }

   /**
   * Get upload
   * @return upload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoUpload getUpload() {
    return upload;
  }


  public void setUpload(VideoUpload upload) {
    
    
    
    this.upload = upload;
  }


  public Video uploader(VideoUploader uploader) {
    
    
    
    
    this.uploader = uploader;
    return this;
  }

   /**
   * Get uploader
   * @return uploader
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VideoUploader getUploader() {
    return uploader;
  }


  public void setUploader(VideoUploader uploader) {
    
    
    
    this.uploader = uploader;
  }


  public Video uri(String uri) {
    
    
    
    
    this.uri = uri;
    return this;
  }

   /**
   * The video&#39;s canonical relative URI.
   * @return uri
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "/videos/258684937", required = true, value = "The video's canonical relative URI.")

  public String getUri() {
    return uri;
  }


  public void setUri(String uri) {
    
    
    
    this.uri = uri;
  }


  public Video user(User user) {
    
    
    
    
    this.user = user;
    return this;
  }

   /**
   * The video&#39;s owner.
   * @return user
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The video's owner.")

  public User getUser() {
    return user;
  }


  public void setUser(User user) {
    
    
    
    this.user = user;
  }


  public Video versionTranscodeStatus(VersionTranscodeStatus versionTranscodeStatus) {
    
    
    
    
    this.versionTranscodeStatus = versionTranscodeStatus;
    return this;
  }

   /**
   * Detailed transcode status information for the current version of the video upload.
   * @return versionTranscodeStatus
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Detailed transcode status information for the current version of the video upload.")

  public VersionTranscodeStatus getVersionTranscodeStatus() {
    return versionTranscodeStatus;
  }


  public void setVersionTranscodeStatus(VersionTranscodeStatus versionTranscodeStatus) {
    
    
    
    this.versionTranscodeStatus = versionTranscodeStatus;
  }


  public Video vod(VideoVod vod) {
    
    
    
    
    this.vod = vod;
    return this;
  }

   /**
   * Get vod
   * @return vod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoVod getVod() {
    return vod;
  }


  public void setVod(VideoVod vod) {
    
    
    
    this.vod = vod;
  }


  public Video width(Double width) {
    
    
    
    
    this.width = width;
    return this;
  }

  public Video width(Integer width) {
    
    
    
    
    this.width = width.doubleValue();
    return this;
  }

   /**
   * The video&#39;s width in pixels.
   * @return width
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1920", required = true, value = "The video's width in pixels.")

  public Double getWidth() {
    return width;
  }


  public void setWidth(Double width) {
    
    
    
    this.width = width;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Video instance itself
   */
  public Video putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Video video = (Video) o;
    return Objects.equals(this.tags, video.tags) &&
        Objects.equals(this.description, video.description) &&
        Objects.equals(this.allowedPrivacies, video.allowedPrivacies) &&
        Objects.equals(this.app, video.app) &&
        Objects.equals(this.canMoveToProject, video.canMoveToProject) &&
        Objects.equals(this.categories, video.categories) &&
        Objects.equals(this.contentRating, video.contentRating) &&
        Objects.equals(this.contentRatingClass, video.contentRatingClass) &&
        Objects.equals(this.context, video.context) &&
        Objects.equals(this.createdTime, video.createdTime) &&
        Objects.equals(this.customUrl, video.customUrl) &&
        Objects.equals(this.descriptionHtml, video.descriptionHtml) &&
        Objects.equals(this.descriptionRich, video.descriptionRich) &&
        Objects.equals(this.disabledProperties, video.disabledProperties) &&
        Objects.equals(this.download, video.download) &&
        Objects.equals(this.duration, video.duration) &&
        Objects.equals(this.editSession, video.editSession) &&
        Objects.equals(this.embed, video.embed) &&
        Objects.equals(this.files, video.files) &&
        Objects.equals(this.hasAudio, video.hasAudio) &&
        Objects.equals(this.hasAudioTracks, video.hasAudioTracks) &&
        Objects.equals(this.hasChapters, video.hasChapters) &&
        Objects.equals(this.hasInteractive, video.hasInteractive) &&
        Objects.equals(this.hasTextTracks, video.hasTextTracks) &&
        Objects.equals(this.height, video.height) &&
        Objects.equals(this.isCopyrightRestricted, video.isCopyrightRestricted) &&
        Objects.equals(this.isFree, video.isFree) &&
        Objects.equals(this.isPlayable, video.isPlayable) &&
        Objects.equals(this.language, video.language) &&
        Objects.equals(this.lastUserActionEventDate, video.lastUserActionEventDate) &&
        Objects.equals(this.license, video.license) &&
        Objects.equals(this.link, video.link) &&
        Objects.equals(this.manageLink, video.manageLink) &&
        Objects.equals(this.metadata, video.metadata) &&
        Objects.equals(this.modifiedTime, video.modifiedTime) &&
        Objects.equals(this.name, video.name) &&
        Objects.equals(this.originVariableFrameResolution, video.originVariableFrameResolution) &&
        Objects.equals(this.parentFolder, video.parentFolder) &&
        Objects.equals(this.password, video.password) &&
        Objects.equals(this.pictures, video.pictures) &&
        Objects.equals(this.play, video.play) &&
        Objects.equals(this.playerEmbedUrl, video.playerEmbedUrl) &&
        Objects.equals(this.privacy, video.privacy) &&
        Objects.equals(this.ratingModLocked, video.ratingModLocked) &&
        Objects.equals(this.releaseTime, video.releaseTime) &&
        Objects.equals(this.resourceKey, video.resourceKey) &&
        Objects.equals(this.showReviewPage, video.showReviewPage) &&
        Objects.equals(this.showSvvFooterBanner, video.showSvvFooterBanner) &&
        Objects.equals(this.showSvvTimecodedComments, video.showSvvTimecodedComments) &&
        Objects.equals(this.spatial, video.spatial) &&
        Objects.equals(this.stats, video.stats) &&
        Objects.equals(this.status, video.status) &&
        Objects.equals(this.transcode, video.transcode) &&
        Objects.equals(this.transcript, video.transcript) &&
        Objects.equals(this.type, video.type) &&
        Objects.equals(this.upload, video.upload) &&
        Objects.equals(this.uploader, video.uploader) &&
        Objects.equals(this.uri, video.uri) &&
        Objects.equals(this.user, video.user) &&
        Objects.equals(this.versionTranscodeStatus, video.versionTranscodeStatus) &&
        Objects.equals(this.vod, video.vod) &&
        Objects.equals(this.width, video.width)&&
        Objects.equals(this.additionalProperties, video.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(tags, description, allowedPrivacies, app, canMoveToProject, categories, contentRating, contentRatingClass, context, createdTime, customUrl, descriptionHtml, descriptionRich, disabledProperties, download, duration, editSession, embed, files, hasAudio, hasAudioTracks, hasChapters, hasInteractive, hasTextTracks, height, isCopyrightRestricted, isFree, isPlayable, language, lastUserActionEventDate, license, link, manageLink, metadata, modifiedTime, name, originVariableFrameResolution, parentFolder, password, pictures, play, playerEmbedUrl, privacy, ratingModLocked, releaseTime, resourceKey, showReviewPage, showSvvFooterBanner, showSvvTimecodedComments, spatial, stats, status, transcode, transcript, type, upload, uploader, uri, user, versionTranscodeStatus, vod, width, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Video {\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    allowedPrivacies: ").append(toIndentedString(allowedPrivacies)).append("\n");
    sb.append("    app: ").append(toIndentedString(app)).append("\n");
    sb.append("    canMoveToProject: ").append(toIndentedString(canMoveToProject)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    contentRating: ").append(toIndentedString(contentRating)).append("\n");
    sb.append("    contentRatingClass: ").append(toIndentedString(contentRatingClass)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    customUrl: ").append(toIndentedString(customUrl)).append("\n");
    sb.append("    descriptionHtml: ").append(toIndentedString(descriptionHtml)).append("\n");
    sb.append("    descriptionRich: ").append(toIndentedString(descriptionRich)).append("\n");
    sb.append("    disabledProperties: ").append(toIndentedString(disabledProperties)).append("\n");
    sb.append("    download: ").append(toIndentedString(download)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    editSession: ").append(toIndentedString(editSession)).append("\n");
    sb.append("    embed: ").append(toIndentedString(embed)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    hasAudio: ").append(toIndentedString(hasAudio)).append("\n");
    sb.append("    hasAudioTracks: ").append(toIndentedString(hasAudioTracks)).append("\n");
    sb.append("    hasChapters: ").append(toIndentedString(hasChapters)).append("\n");
    sb.append("    hasInteractive: ").append(toIndentedString(hasInteractive)).append("\n");
    sb.append("    hasTextTracks: ").append(toIndentedString(hasTextTracks)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    isCopyrightRestricted: ").append(toIndentedString(isCopyrightRestricted)).append("\n");
    sb.append("    isFree: ").append(toIndentedString(isFree)).append("\n");
    sb.append("    isPlayable: ").append(toIndentedString(isPlayable)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    lastUserActionEventDate: ").append(toIndentedString(lastUserActionEventDate)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    manageLink: ").append(toIndentedString(manageLink)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    modifiedTime: ").append(toIndentedString(modifiedTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    originVariableFrameResolution: ").append(toIndentedString(originVariableFrameResolution)).append("\n");
    sb.append("    parentFolder: ").append(toIndentedString(parentFolder)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    pictures: ").append(toIndentedString(pictures)).append("\n");
    sb.append("    play: ").append(toIndentedString(play)).append("\n");
    sb.append("    playerEmbedUrl: ").append(toIndentedString(playerEmbedUrl)).append("\n");
    sb.append("    privacy: ").append(toIndentedString(privacy)).append("\n");
    sb.append("    ratingModLocked: ").append(toIndentedString(ratingModLocked)).append("\n");
    sb.append("    releaseTime: ").append(toIndentedString(releaseTime)).append("\n");
    sb.append("    resourceKey: ").append(toIndentedString(resourceKey)).append("\n");
    sb.append("    showReviewPage: ").append(toIndentedString(showReviewPage)).append("\n");
    sb.append("    showSvvFooterBanner: ").append(toIndentedString(showSvvFooterBanner)).append("\n");
    sb.append("    showSvvTimecodedComments: ").append(toIndentedString(showSvvTimecodedComments)).append("\n");
    sb.append("    spatial: ").append(toIndentedString(spatial)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    transcode: ").append(toIndentedString(transcode)).append("\n");
    sb.append("    transcript: ").append(toIndentedString(transcript)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    upload: ").append(toIndentedString(upload)).append("\n");
    sb.append("    uploader: ").append(toIndentedString(uploader)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    versionTranscodeStatus: ").append(toIndentedString(versionTranscodeStatus)).append("\n");
    sb.append("    vod: ").append(toIndentedString(vod)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tags");
    openapiFields.add("description");
    openapiFields.add("allowed_privacies");
    openapiFields.add("app");
    openapiFields.add("can_move_to_project");
    openapiFields.add("categories");
    openapiFields.add("content_rating");
    openapiFields.add("content_rating_class");
    openapiFields.add("context");
    openapiFields.add("created_time");
    openapiFields.add("custom_url");
    openapiFields.add("description_html");
    openapiFields.add("description_rich");
    openapiFields.add("disabled_properties");
    openapiFields.add("download");
    openapiFields.add("duration");
    openapiFields.add("edit_session");
    openapiFields.add("embed");
    openapiFields.add("files");
    openapiFields.add("has_audio");
    openapiFields.add("has_audio_tracks");
    openapiFields.add("has_chapters");
    openapiFields.add("has_interactive");
    openapiFields.add("has_text_tracks");
    openapiFields.add("height");
    openapiFields.add("is_copyright_restricted");
    openapiFields.add("is_free");
    openapiFields.add("is_playable");
    openapiFields.add("language");
    openapiFields.add("last_user_action_event_date");
    openapiFields.add("license");
    openapiFields.add("link");
    openapiFields.add("manage_link");
    openapiFields.add("metadata");
    openapiFields.add("modified_time");
    openapiFields.add("name");
    openapiFields.add("origin_variable_frame_resolution");
    openapiFields.add("parent_folder");
    openapiFields.add("password");
    openapiFields.add("pictures");
    openapiFields.add("play");
    openapiFields.add("player_embed_url");
    openapiFields.add("privacy");
    openapiFields.add("rating_mod_locked");
    openapiFields.add("release_time");
    openapiFields.add("resource_key");
    openapiFields.add("show_review_page");
    openapiFields.add("show_svv_footer_banner");
    openapiFields.add("show_svv_timecoded_comments");
    openapiFields.add("spatial");
    openapiFields.add("stats");
    openapiFields.add("status");
    openapiFields.add("transcode");
    openapiFields.add("transcript");
    openapiFields.add("type");
    openapiFields.add("upload");
    openapiFields.add("uploader");
    openapiFields.add("uri");
    openapiFields.add("user");
    openapiFields.add("version_transcode_status");
    openapiFields.add("vod");
    openapiFields.add("width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("tags");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("allowed_privacies");
    openapiRequiredFields.add("app");
    openapiRequiredFields.add("can_move_to_project");
    openapiRequiredFields.add("categories");
    openapiRequiredFields.add("content_rating");
    openapiRequiredFields.add("content_rating_class");
    openapiRequiredFields.add("context");
    openapiRequiredFields.add("created_time");
    openapiRequiredFields.add("custom_url");
    openapiRequiredFields.add("description_html");
    openapiRequiredFields.add("download");
    openapiRequiredFields.add("duration");
    openapiRequiredFields.add("embed");
    openapiRequiredFields.add("files");
    openapiRequiredFields.add("has_audio");
    openapiRequiredFields.add("has_audio_tracks");
    openapiRequiredFields.add("has_chapters");
    openapiRequiredFields.add("has_interactive");
    openapiRequiredFields.add("has_text_tracks");
    openapiRequiredFields.add("height");
    openapiRequiredFields.add("is_copyright_restricted");
    openapiRequiredFields.add("is_playable");
    openapiRequiredFields.add("language");
    openapiRequiredFields.add("license");
    openapiRequiredFields.add("link");
    openapiRequiredFields.add("metadata");
    openapiRequiredFields.add("modified_time");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("origin_variable_frame_resolution");
    openapiRequiredFields.add("pictures");
    openapiRequiredFields.add("player_embed_url");
    openapiRequiredFields.add("privacy");
    openapiRequiredFields.add("rating_mod_locked");
    openapiRequiredFields.add("release_time");
    openapiRequiredFields.add("resource_key");
    openapiRequiredFields.add("show_review_page");
    openapiRequiredFields.add("show_svv_footer_banner");
    openapiRequiredFields.add("show_svv_timecoded_comments");
    openapiRequiredFields.add("spatial");
    openapiRequiredFields.add("stats");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("transcode");
    openapiRequiredFields.add("transcript");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("upload");
    openapiRequiredFields.add("uploader");
    openapiRequiredFields.add("uri");
    openapiRequiredFields.add("user");
    openapiRequiredFields.add("version_transcode_status");
    openapiRequiredFields.add("vod");
    openapiRequiredFields.add("width");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Video
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Video.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Video is not found in the empty JSON string", Video.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Video.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }

      JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
      // validate the required field `tags` (array)
      for (int i = 0; i < jsonArraytags.size(); i++) {
        Tag.validateJsonObject(jsonArraytags.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("description").isJsonNull() && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("allowed_privacies") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("allowed_privacies").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowed_privacies` to be an array in the JSON string but got `%s`", jsonObj.get("allowed_privacies").toString()));
      }
      // validate the required field `app`
      ApiApp.validateJsonObject(jsonObj.getAsJsonObject("app"));
      // ensure the json data is an array
      if (!jsonObj.get("categories").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `categories` to be an array in the JSON string but got `%s`", jsonObj.get("categories").toString()));
      }

      JsonArray jsonArraycategories = jsonObj.getAsJsonArray("categories");
      // validate the required field `categories` (array)
      for (int i = 0; i < jsonArraycategories.size(); i++) {
        Category.validateJsonObject(jsonArraycategories.get(i).getAsJsonObject());
      };
      // ensure the required json array is present
      if (jsonObj.get("content_rating") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("content_rating").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `content_rating` to be an array in the JSON string but got `%s`", jsonObj.get("content_rating").toString()));
      }
      if (!jsonObj.get("content_rating_class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content_rating_class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content_rating_class").toString()));
      }
      // validate the required field `context`
      VideoContext.validateJsonObject(jsonObj.getAsJsonObject("context"));
      if (!jsonObj.get("created_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_time").toString()));
      }
      if (!jsonObj.get("custom_url").isJsonNull() && !jsonObj.get("custom_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_url").toString()));
      }
      if (!jsonObj.get("description_html").isJsonNull() && !jsonObj.get("description_html").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description_html` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description_html").toString()));
      }
      if ((jsonObj.get("description_rich") != null && !jsonObj.get("description_rich").isJsonNull()) && !jsonObj.get("description_rich").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description_rich` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description_rich").toString()));
      }
      // validate the optional field `disabled_properties`
      if (jsonObj.get("disabled_properties") != null && !jsonObj.get("disabled_properties").isJsonNull()) {
        DisabledVideoProperties.validateJsonObject(jsonObj.getAsJsonObject("disabled_properties"));
      }
      // ensure the json data is an array
      if (!jsonObj.get("download").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `download` to be an array in the JSON string but got `%s`", jsonObj.get("download").toString()));
      }

      JsonArray jsonArraydownload = jsonObj.getAsJsonArray("download");
      // validate the required field `download` (array)
      for (int i = 0; i < jsonArraydownload.size(); i++) {
        VideoFile.validateJsonObject(jsonArraydownload.get(i).getAsJsonObject());
      };
      // validate the optional field `edit_session`
      if (jsonObj.get("edit_session") != null && !jsonObj.get("edit_session").isJsonNull()) {
        EditingSession.validateJsonObject(jsonObj.getAsJsonObject("edit_session"));
      }
      // validate the required field `embed`
      EmbedSettings.validateJsonObject(jsonObj.getAsJsonObject("embed"));
      // ensure the json data is an array
      if (!jsonObj.get("files").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `files` to be an array in the JSON string but got `%s`", jsonObj.get("files").toString()));
      }

      JsonArray jsonArrayfiles = jsonObj.getAsJsonArray("files");
      // validate the required field `files` (array)
      for (int i = 0; i < jsonArrayfiles.size(); i++) {
        VideoFile.validateJsonObject(jsonArrayfiles.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("language").isJsonNull() && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      if (!jsonObj.get("last_user_action_event_date").isJsonNull() && (jsonObj.get("last_user_action_event_date") != null && !jsonObj.get("last_user_action_event_date").isJsonNull()) && !jsonObj.get("last_user_action_event_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_user_action_event_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_user_action_event_date").toString()));
      }
      if (!jsonObj.get("license").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `license` to be a primitive type in the JSON string but got `%s`", jsonObj.get("license").toString()));
      }
      if (!jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      if ((jsonObj.get("manage_link") != null && !jsonObj.get("manage_link").isJsonNull()) && !jsonObj.get("manage_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manage_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manage_link").toString()));
      }
      // validate the required field `metadata`
      VideoMetadata.validateJsonObject(jsonObj.getAsJsonObject("metadata"));
      if (!jsonObj.get("modified_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modified_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modified_time").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `parent_folder`
      if (jsonObj.get("parent_folder") != null && !jsonObj.get("parent_folder").isJsonNull()) {
        Project.validateJsonObject(jsonObj.getAsJsonObject("parent_folder"));
      }
      if ((jsonObj.get("password") != null && !jsonObj.get("password").isJsonNull()) && !jsonObj.get("password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password").toString()));
      }
      // validate the required field `pictures`
      Picture.validateJsonObject(jsonObj.getAsJsonObject("pictures"));
      // validate the optional field `play`
      if (jsonObj.get("play") != null && !jsonObj.get("play").isJsonNull()) {
        Play.validateJsonObject(jsonObj.getAsJsonObject("play"));
      }
      if (!jsonObj.get("player_embed_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `player_embed_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("player_embed_url").toString()));
      }
      // validate the required field `privacy`
      VideoPrivacy.validateJsonObject(jsonObj.getAsJsonObject("privacy"));
      if (!jsonObj.get("release_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `release_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("release_time").toString()));
      }
      if (!jsonObj.get("resource_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resource_key").toString()));
      }
      // validate the required field `spatial`
      VideoSpatial.validateJsonObject(jsonObj.getAsJsonObject("spatial"));
      // validate the required field `stats`
      VideoStats.validateJsonObject(jsonObj.getAsJsonObject("stats"));
      if (!jsonObj.get("status").isJsonNull() && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the required field `transcode`
      VideoTranscode.validateJsonObject(jsonObj.getAsJsonObject("transcode"));
      // validate the required field `transcript`
      VideoTranscript.validateJsonObject(jsonObj.getAsJsonObject("transcript"));
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the required field `upload`
      VideoUpload.validateJsonObject(jsonObj.getAsJsonObject("upload"));
      // validate the required field `uploader`
      VideoUploader.validateJsonObject(jsonObj.getAsJsonObject("uploader"));
      if (!jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
      // validate the required field `user`
      User.validateJsonObject(jsonObj.getAsJsonObject("user"));
      // validate the required field `version_transcode_status`
      VersionTranscodeStatus.validateJsonObject(jsonObj.getAsJsonObject("version_transcode_status"));
      // validate the required field `vod`
      VideoVod.validateJsonObject(jsonObj.getAsJsonObject("vod"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Video.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Video' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Video> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Video.class));

       return (TypeAdapter<T>) new TypeAdapter<Video>() {
           @Override
           public void write(JsonWriter out, Video value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Video read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Video instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Video given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Video
  * @throws IOException if the JSON string is invalid with respect to Video
  */
  public static Video fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Video.class);
  }

 /**
  * Convert an instance of Video to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

