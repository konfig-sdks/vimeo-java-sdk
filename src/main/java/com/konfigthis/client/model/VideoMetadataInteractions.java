/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.VideoMetadataInteractionsAlbum;
import com.konfigthis.client.model.VideoMetadataInteractionsAskAi;
import com.konfigthis.client.model.VideoMetadataInteractionsAskAiViewer;
import com.konfigthis.client.model.VideoMetadataInteractionsBuy;
import com.konfigthis.client.model.VideoMetadataInteractionsCanRequestTeamRoleUpgrade;
import com.konfigthis.client.model.VideoMetadataInteractionsCanUpdatePrivacyToPublic;
import com.konfigthis.client.model.VideoMetadataInteractionsChannel;
import com.konfigthis.client.model.VideoMetadataInteractionsCreateEditor;
import com.konfigthis.client.model.VideoMetadataInteractionsDelete;
import com.konfigthis.client.model.VideoMetadataInteractionsEdit;
import com.konfigthis.client.model.VideoMetadataInteractionsEditPrivacy;
import com.konfigthis.client.model.VideoMetadataInteractionsHasRestrictedPrivacyOptions;
import com.konfigthis.client.model.VideoMetadataInteractionsHighlights;
import com.konfigthis.client.model.VideoMetadataInteractionsInvite;
import com.konfigthis.client.model.VideoMetadataInteractionsLegalHold;
import com.konfigthis.client.model.VideoMetadataInteractionsLike;
import com.konfigthis.client.model.VideoMetadataInteractionsRent;
import com.konfigthis.client.model.VideoMetadataInteractionsReport;
import com.konfigthis.client.model.VideoMetadataInteractionsSetContentRating;
import com.konfigthis.client.model.VideoMetadataInteractionsSubscribe;
import com.konfigthis.client.model.VideoMetadataInteractionsSummary;
import com.konfigthis.client.model.VideoMetadataInteractionsTeamMentions;
import com.konfigthis.client.model.VideoMetadataInteractionsTranscriptVideoEditor;
import com.konfigthis.client.model.VideoMetadataInteractionsTrim;
import com.konfigthis.client.model.VideoMetadataInteractionsValidate;
import com.konfigthis.client.model.VideoMetadataInteractionsViewPrivacy;
import com.konfigthis.client.model.VideoMetadataInteractionsViewTeamMembers;
import com.konfigthis.client.model.VideoMetadataInteractionsWatched;
import com.konfigthis.client.model.VideoMetadataInteractionsWatchlater;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * A list of resource URIs related to the video.
 */
@ApiModel(description = "A list of resource URIs related to the video.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class VideoMetadataInteractions {
  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private VideoMetadataInteractionsSummary summary;

  public static final String SERIALIZED_NAME_ALBUM = "album";
  @SerializedName(SERIALIZED_NAME_ALBUM)
  private VideoMetadataInteractionsAlbum album;

  public static final String SERIALIZED_NAME_ASK_AI = "ask_ai";
  @SerializedName(SERIALIZED_NAME_ASK_AI)
  private VideoMetadataInteractionsAskAi askAi;

  public static final String SERIALIZED_NAME_ASK_AI_VIEWER = "ask_ai_viewer";
  @SerializedName(SERIALIZED_NAME_ASK_AI_VIEWER)
  private VideoMetadataInteractionsAskAiViewer askAiViewer;

  public static final String SERIALIZED_NAME_BUY = "buy";
  @SerializedName(SERIALIZED_NAME_BUY)
  private VideoMetadataInteractionsBuy buy;

  public static final String SERIALIZED_NAME_CAN_REQUEST_TEAM_ROLE_UPGRADE = "can_request_team_role_upgrade";
  @SerializedName(SERIALIZED_NAME_CAN_REQUEST_TEAM_ROLE_UPGRADE)
  private VideoMetadataInteractionsCanRequestTeamRoleUpgrade canRequestTeamRoleUpgrade;

  public static final String SERIALIZED_NAME_CAN_UPDATE_PRIVACY_TO_PUBLIC = "can_update_privacy_to_public";
  @SerializedName(SERIALIZED_NAME_CAN_UPDATE_PRIVACY_TO_PUBLIC)
  private VideoMetadataInteractionsCanUpdatePrivacyToPublic canUpdatePrivacyToPublic;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private VideoMetadataInteractionsChannel channel;

  public static final String SERIALIZED_NAME_CREATE_EDITOR = "create_editor";
  @SerializedName(SERIALIZED_NAME_CREATE_EDITOR)
  private VideoMetadataInteractionsCreateEditor createEditor;

  public static final String SERIALIZED_NAME_DELETE = "delete";
  @SerializedName(SERIALIZED_NAME_DELETE)
  private VideoMetadataInteractionsDelete delete;

  public static final String SERIALIZED_NAME_EDIT = "edit";
  @SerializedName(SERIALIZED_NAME_EDIT)
  private VideoMetadataInteractionsEdit edit;

  public static final String SERIALIZED_NAME_EDIT_PRIVACY = "edit_privacy";
  @SerializedName(SERIALIZED_NAME_EDIT_PRIVACY)
  private VideoMetadataInteractionsEditPrivacy editPrivacy;

  public static final String SERIALIZED_NAME_HAS_RESTRICTED_PRIVACY_OPTIONS = "has_restricted_privacy_options";
  @SerializedName(SERIALIZED_NAME_HAS_RESTRICTED_PRIVACY_OPTIONS)
  private VideoMetadataInteractionsHasRestrictedPrivacyOptions hasRestrictedPrivacyOptions;

  public static final String SERIALIZED_NAME_HIGHLIGHTS = "highlights";
  @SerializedName(SERIALIZED_NAME_HIGHLIGHTS)
  private VideoMetadataInteractionsHighlights highlights;

  public static final String SERIALIZED_NAME_INVITE = "invite";
  @SerializedName(SERIALIZED_NAME_INVITE)
  private VideoMetadataInteractionsInvite invite;

  public static final String SERIALIZED_NAME_LEGAL_HOLD = "legal_hold";
  @SerializedName(SERIALIZED_NAME_LEGAL_HOLD)
  private VideoMetadataInteractionsLegalHold legalHold;

  public static final String SERIALIZED_NAME_LIKE = "like";
  @SerializedName(SERIALIZED_NAME_LIKE)
  private VideoMetadataInteractionsLike like;

  public static final String SERIALIZED_NAME_RENT = "rent";
  @SerializedName(SERIALIZED_NAME_RENT)
  private VideoMetadataInteractionsRent rent;

  public static final String SERIALIZED_NAME_REPORT = "report";
  @SerializedName(SERIALIZED_NAME_REPORT)
  private VideoMetadataInteractionsReport report;

  public static final String SERIALIZED_NAME_SET_CONTENT_RATING = "set_content_rating";
  @SerializedName(SERIALIZED_NAME_SET_CONTENT_RATING)
  private VideoMetadataInteractionsSetContentRating setContentRating;

  public static final String SERIALIZED_NAME_SUBSCRIBE = "subscribe";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBE)
  private VideoMetadataInteractionsSubscribe subscribe;

  public static final String SERIALIZED_NAME_TEAM_MENTIONS = "team_mentions";
  @SerializedName(SERIALIZED_NAME_TEAM_MENTIONS)
  private VideoMetadataInteractionsTeamMentions teamMentions;

  public static final String SERIALIZED_NAME_TRANSCRIPT_VIDEO_EDITOR = "transcript_video_editor";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPT_VIDEO_EDITOR)
  private VideoMetadataInteractionsTranscriptVideoEditor transcriptVideoEditor;

  public static final String SERIALIZED_NAME_TRIM = "trim";
  @SerializedName(SERIALIZED_NAME_TRIM)
  private VideoMetadataInteractionsTrim trim;

  public static final String SERIALIZED_NAME_VALIDATE = "validate";
  @SerializedName(SERIALIZED_NAME_VALIDATE)
  private VideoMetadataInteractionsValidate validate;

  public static final String SERIALIZED_NAME_VIEW_PRIVACY = "view_privacy";
  @SerializedName(SERIALIZED_NAME_VIEW_PRIVACY)
  private VideoMetadataInteractionsViewPrivacy viewPrivacy;

  public static final String SERIALIZED_NAME_VIEW_TEAM_MEMBERS = "view_team_members";
  @SerializedName(SERIALIZED_NAME_VIEW_TEAM_MEMBERS)
  private VideoMetadataInteractionsViewTeamMembers viewTeamMembers;

  public static final String SERIALIZED_NAME_WATCHED = "watched";
  @SerializedName(SERIALIZED_NAME_WATCHED)
  private VideoMetadataInteractionsWatched watched;

  public static final String SERIALIZED_NAME_WATCHLATER = "watchlater";
  @SerializedName(SERIALIZED_NAME_WATCHLATER)
  private VideoMetadataInteractionsWatchlater watchlater;

  public VideoMetadataInteractions() {
  }

  public VideoMetadataInteractions summary(VideoMetadataInteractionsSummary summary) {
    
    
    
    
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsSummary getSummary() {
    return summary;
  }


  public void setSummary(VideoMetadataInteractionsSummary summary) {
    
    
    
    this.summary = summary;
  }


  public VideoMetadataInteractions album(VideoMetadataInteractionsAlbum album) {
    
    
    
    
    this.album = album;
    return this;
  }

   /**
   * Get album
   * @return album
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsAlbum getAlbum() {
    return album;
  }


  public void setAlbum(VideoMetadataInteractionsAlbum album) {
    
    
    
    this.album = album;
  }


  public VideoMetadataInteractions askAi(VideoMetadataInteractionsAskAi askAi) {
    
    
    
    
    this.askAi = askAi;
    return this;
  }

   /**
   * Get askAi
   * @return askAi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsAskAi getAskAi() {
    return askAi;
  }


  public void setAskAi(VideoMetadataInteractionsAskAi askAi) {
    
    
    
    this.askAi = askAi;
  }


  public VideoMetadataInteractions askAiViewer(VideoMetadataInteractionsAskAiViewer askAiViewer) {
    
    
    
    
    this.askAiViewer = askAiViewer;
    return this;
  }

   /**
   * Get askAiViewer
   * @return askAiViewer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsAskAiViewer getAskAiViewer() {
    return askAiViewer;
  }


  public void setAskAiViewer(VideoMetadataInteractionsAskAiViewer askAiViewer) {
    
    
    
    this.askAiViewer = askAiViewer;
  }


  public VideoMetadataInteractions buy(VideoMetadataInteractionsBuy buy) {
    
    
    
    
    this.buy = buy;
    return this;
  }

   /**
   * Get buy
   * @return buy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsBuy getBuy() {
    return buy;
  }


  public void setBuy(VideoMetadataInteractionsBuy buy) {
    
    
    
    this.buy = buy;
  }


  public VideoMetadataInteractions canRequestTeamRoleUpgrade(VideoMetadataInteractionsCanRequestTeamRoleUpgrade canRequestTeamRoleUpgrade) {
    
    
    
    
    this.canRequestTeamRoleUpgrade = canRequestTeamRoleUpgrade;
    return this;
  }

   /**
   * Get canRequestTeamRoleUpgrade
   * @return canRequestTeamRoleUpgrade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsCanRequestTeamRoleUpgrade getCanRequestTeamRoleUpgrade() {
    return canRequestTeamRoleUpgrade;
  }


  public void setCanRequestTeamRoleUpgrade(VideoMetadataInteractionsCanRequestTeamRoleUpgrade canRequestTeamRoleUpgrade) {
    
    
    
    this.canRequestTeamRoleUpgrade = canRequestTeamRoleUpgrade;
  }


  public VideoMetadataInteractions canUpdatePrivacyToPublic(VideoMetadataInteractionsCanUpdatePrivacyToPublic canUpdatePrivacyToPublic) {
    
    
    
    
    this.canUpdatePrivacyToPublic = canUpdatePrivacyToPublic;
    return this;
  }

   /**
   * Get canUpdatePrivacyToPublic
   * @return canUpdatePrivacyToPublic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsCanUpdatePrivacyToPublic getCanUpdatePrivacyToPublic() {
    return canUpdatePrivacyToPublic;
  }


  public void setCanUpdatePrivacyToPublic(VideoMetadataInteractionsCanUpdatePrivacyToPublic canUpdatePrivacyToPublic) {
    
    
    
    this.canUpdatePrivacyToPublic = canUpdatePrivacyToPublic;
  }


  public VideoMetadataInteractions channel(VideoMetadataInteractionsChannel channel) {
    
    
    
    
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsChannel getChannel() {
    return channel;
  }


  public void setChannel(VideoMetadataInteractionsChannel channel) {
    
    
    
    this.channel = channel;
  }


  public VideoMetadataInteractions createEditor(VideoMetadataInteractionsCreateEditor createEditor) {
    
    
    
    
    this.createEditor = createEditor;
    return this;
  }

   /**
   * Get createEditor
   * @return createEditor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsCreateEditor getCreateEditor() {
    return createEditor;
  }


  public void setCreateEditor(VideoMetadataInteractionsCreateEditor createEditor) {
    
    
    
    this.createEditor = createEditor;
  }


  public VideoMetadataInteractions delete(VideoMetadataInteractionsDelete delete) {
    
    
    
    
    this.delete = delete;
    return this;
  }

   /**
   * Get delete
   * @return delete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsDelete getDelete() {
    return delete;
  }


  public void setDelete(VideoMetadataInteractionsDelete delete) {
    
    
    
    this.delete = delete;
  }


  public VideoMetadataInteractions edit(VideoMetadataInteractionsEdit edit) {
    
    
    
    
    this.edit = edit;
    return this;
  }

   /**
   * Get edit
   * @return edit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsEdit getEdit() {
    return edit;
  }


  public void setEdit(VideoMetadataInteractionsEdit edit) {
    
    
    
    this.edit = edit;
  }


  public VideoMetadataInteractions editPrivacy(VideoMetadataInteractionsEditPrivacy editPrivacy) {
    
    
    
    
    this.editPrivacy = editPrivacy;
    return this;
  }

   /**
   * Get editPrivacy
   * @return editPrivacy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsEditPrivacy getEditPrivacy() {
    return editPrivacy;
  }


  public void setEditPrivacy(VideoMetadataInteractionsEditPrivacy editPrivacy) {
    
    
    
    this.editPrivacy = editPrivacy;
  }


  public VideoMetadataInteractions hasRestrictedPrivacyOptions(VideoMetadataInteractionsHasRestrictedPrivacyOptions hasRestrictedPrivacyOptions) {
    
    
    
    
    this.hasRestrictedPrivacyOptions = hasRestrictedPrivacyOptions;
    return this;
  }

   /**
   * Get hasRestrictedPrivacyOptions
   * @return hasRestrictedPrivacyOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsHasRestrictedPrivacyOptions getHasRestrictedPrivacyOptions() {
    return hasRestrictedPrivacyOptions;
  }


  public void setHasRestrictedPrivacyOptions(VideoMetadataInteractionsHasRestrictedPrivacyOptions hasRestrictedPrivacyOptions) {
    
    
    
    this.hasRestrictedPrivacyOptions = hasRestrictedPrivacyOptions;
  }


  public VideoMetadataInteractions highlights(VideoMetadataInteractionsHighlights highlights) {
    
    
    
    
    this.highlights = highlights;
    return this;
  }

   /**
   * Get highlights
   * @return highlights
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsHighlights getHighlights() {
    return highlights;
  }


  public void setHighlights(VideoMetadataInteractionsHighlights highlights) {
    
    
    
    this.highlights = highlights;
  }


  public VideoMetadataInteractions invite(VideoMetadataInteractionsInvite invite) {
    
    
    
    
    this.invite = invite;
    return this;
  }

   /**
   * Get invite
   * @return invite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsInvite getInvite() {
    return invite;
  }


  public void setInvite(VideoMetadataInteractionsInvite invite) {
    
    
    
    this.invite = invite;
  }


  public VideoMetadataInteractions legalHold(VideoMetadataInteractionsLegalHold legalHold) {
    
    
    
    
    this.legalHold = legalHold;
    return this;
  }

   /**
   * Get legalHold
   * @return legalHold
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsLegalHold getLegalHold() {
    return legalHold;
  }


  public void setLegalHold(VideoMetadataInteractionsLegalHold legalHold) {
    
    
    
    this.legalHold = legalHold;
  }


  public VideoMetadataInteractions like(VideoMetadataInteractionsLike like) {
    
    
    
    
    this.like = like;
    return this;
  }

   /**
   * Get like
   * @return like
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsLike getLike() {
    return like;
  }


  public void setLike(VideoMetadataInteractionsLike like) {
    
    
    
    this.like = like;
  }


  public VideoMetadataInteractions rent(VideoMetadataInteractionsRent rent) {
    
    
    
    
    this.rent = rent;
    return this;
  }

   /**
   * Get rent
   * @return rent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsRent getRent() {
    return rent;
  }


  public void setRent(VideoMetadataInteractionsRent rent) {
    
    
    
    this.rent = rent;
  }


  public VideoMetadataInteractions report(VideoMetadataInteractionsReport report) {
    
    
    
    
    this.report = report;
    return this;
  }

   /**
   * Get report
   * @return report
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsReport getReport() {
    return report;
  }


  public void setReport(VideoMetadataInteractionsReport report) {
    
    
    
    this.report = report;
  }


  public VideoMetadataInteractions setContentRating(VideoMetadataInteractionsSetContentRating setContentRating) {
    
    
    
    
    this.setContentRating = setContentRating;
    return this;
  }

   /**
   * Get setContentRating
   * @return setContentRating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsSetContentRating getSetContentRating() {
    return setContentRating;
  }


  public void setSetContentRating(VideoMetadataInteractionsSetContentRating setContentRating) {
    
    
    
    this.setContentRating = setContentRating;
  }


  public VideoMetadataInteractions subscribe(VideoMetadataInteractionsSubscribe subscribe) {
    
    
    
    
    this.subscribe = subscribe;
    return this;
  }

   /**
   * Get subscribe
   * @return subscribe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VideoMetadataInteractionsSubscribe getSubscribe() {
    return subscribe;
  }


  public void setSubscribe(VideoMetadataInteractionsSubscribe subscribe) {
    
    
    
    this.subscribe = subscribe;
  }


  public VideoMetadataInteractions teamMentions(VideoMetadataInteractionsTeamMentions teamMentions) {
    
    
    
    
    this.teamMentions = teamMentions;
    return this;
  }

   /**
   * Get teamMentions
   * @return teamMentions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsTeamMentions getTeamMentions() {
    return teamMentions;
  }


  public void setTeamMentions(VideoMetadataInteractionsTeamMentions teamMentions) {
    
    
    
    this.teamMentions = teamMentions;
  }


  public VideoMetadataInteractions transcriptVideoEditor(VideoMetadataInteractionsTranscriptVideoEditor transcriptVideoEditor) {
    
    
    
    
    this.transcriptVideoEditor = transcriptVideoEditor;
    return this;
  }

   /**
   * Get transcriptVideoEditor
   * @return transcriptVideoEditor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsTranscriptVideoEditor getTranscriptVideoEditor() {
    return transcriptVideoEditor;
  }


  public void setTranscriptVideoEditor(VideoMetadataInteractionsTranscriptVideoEditor transcriptVideoEditor) {
    
    
    
    this.transcriptVideoEditor = transcriptVideoEditor;
  }


  public VideoMetadataInteractions trim(VideoMetadataInteractionsTrim trim) {
    
    
    
    
    this.trim = trim;
    return this;
  }

   /**
   * Get trim
   * @return trim
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsTrim getTrim() {
    return trim;
  }


  public void setTrim(VideoMetadataInteractionsTrim trim) {
    
    
    
    this.trim = trim;
  }


  public VideoMetadataInteractions validate(VideoMetadataInteractionsValidate validate) {
    
    
    
    
    this.validate = validate;
    return this;
  }

   /**
   * Get validate
   * @return validate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsValidate getValidate() {
    return validate;
  }


  public void setValidate(VideoMetadataInteractionsValidate validate) {
    
    
    
    this.validate = validate;
  }


  public VideoMetadataInteractions viewPrivacy(VideoMetadataInteractionsViewPrivacy viewPrivacy) {
    
    
    
    
    this.viewPrivacy = viewPrivacy;
    return this;
  }

   /**
   * Get viewPrivacy
   * @return viewPrivacy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsViewPrivacy getViewPrivacy() {
    return viewPrivacy;
  }


  public void setViewPrivacy(VideoMetadataInteractionsViewPrivacy viewPrivacy) {
    
    
    
    this.viewPrivacy = viewPrivacy;
  }


  public VideoMetadataInteractions viewTeamMembers(VideoMetadataInteractionsViewTeamMembers viewTeamMembers) {
    
    
    
    
    this.viewTeamMembers = viewTeamMembers;
    return this;
  }

   /**
   * Get viewTeamMembers
   * @return viewTeamMembers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsViewTeamMembers getViewTeamMembers() {
    return viewTeamMembers;
  }


  public void setViewTeamMembers(VideoMetadataInteractionsViewTeamMembers viewTeamMembers) {
    
    
    
    this.viewTeamMembers = viewTeamMembers;
  }


  public VideoMetadataInteractions watched(VideoMetadataInteractionsWatched watched) {
    
    
    
    
    this.watched = watched;
    return this;
  }

   /**
   * Get watched
   * @return watched
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsWatched getWatched() {
    return watched;
  }


  public void setWatched(VideoMetadataInteractionsWatched watched) {
    
    
    
    this.watched = watched;
  }


  public VideoMetadataInteractions watchlater(VideoMetadataInteractionsWatchlater watchlater) {
    
    
    
    
    this.watchlater = watchlater;
    return this;
  }

   /**
   * Get watchlater
   * @return watchlater
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VideoMetadataInteractionsWatchlater getWatchlater() {
    return watchlater;
  }


  public void setWatchlater(VideoMetadataInteractionsWatchlater watchlater) {
    
    
    
    this.watchlater = watchlater;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the VideoMetadataInteractions instance itself
   */
  public VideoMetadataInteractions putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoMetadataInteractions videoMetadataInteractions = (VideoMetadataInteractions) o;
    return Objects.equals(this.summary, videoMetadataInteractions.summary) &&
        Objects.equals(this.album, videoMetadataInteractions.album) &&
        Objects.equals(this.askAi, videoMetadataInteractions.askAi) &&
        Objects.equals(this.askAiViewer, videoMetadataInteractions.askAiViewer) &&
        Objects.equals(this.buy, videoMetadataInteractions.buy) &&
        Objects.equals(this.canRequestTeamRoleUpgrade, videoMetadataInteractions.canRequestTeamRoleUpgrade) &&
        Objects.equals(this.canUpdatePrivacyToPublic, videoMetadataInteractions.canUpdatePrivacyToPublic) &&
        Objects.equals(this.channel, videoMetadataInteractions.channel) &&
        Objects.equals(this.createEditor, videoMetadataInteractions.createEditor) &&
        Objects.equals(this.delete, videoMetadataInteractions.delete) &&
        Objects.equals(this.edit, videoMetadataInteractions.edit) &&
        Objects.equals(this.editPrivacy, videoMetadataInteractions.editPrivacy) &&
        Objects.equals(this.hasRestrictedPrivacyOptions, videoMetadataInteractions.hasRestrictedPrivacyOptions) &&
        Objects.equals(this.highlights, videoMetadataInteractions.highlights) &&
        Objects.equals(this.invite, videoMetadataInteractions.invite) &&
        Objects.equals(this.legalHold, videoMetadataInteractions.legalHold) &&
        Objects.equals(this.like, videoMetadataInteractions.like) &&
        Objects.equals(this.rent, videoMetadataInteractions.rent) &&
        Objects.equals(this.report, videoMetadataInteractions.report) &&
        Objects.equals(this.setContentRating, videoMetadataInteractions.setContentRating) &&
        Objects.equals(this.subscribe, videoMetadataInteractions.subscribe) &&
        Objects.equals(this.teamMentions, videoMetadataInteractions.teamMentions) &&
        Objects.equals(this.transcriptVideoEditor, videoMetadataInteractions.transcriptVideoEditor) &&
        Objects.equals(this.trim, videoMetadataInteractions.trim) &&
        Objects.equals(this.validate, videoMetadataInteractions.validate) &&
        Objects.equals(this.viewPrivacy, videoMetadataInteractions.viewPrivacy) &&
        Objects.equals(this.viewTeamMembers, videoMetadataInteractions.viewTeamMembers) &&
        Objects.equals(this.watched, videoMetadataInteractions.watched) &&
        Objects.equals(this.watchlater, videoMetadataInteractions.watchlater)&&
        Objects.equals(this.additionalProperties, videoMetadataInteractions.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(summary, album, askAi, askAiViewer, buy, canRequestTeamRoleUpgrade, canUpdatePrivacyToPublic, channel, createEditor, delete, edit, editPrivacy, hasRestrictedPrivacyOptions, highlights, invite, legalHold, like, rent, report, setContentRating, subscribe, teamMentions, transcriptVideoEditor, trim, validate, viewPrivacy, viewTeamMembers, watched, watchlater, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoMetadataInteractions {\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    album: ").append(toIndentedString(album)).append("\n");
    sb.append("    askAi: ").append(toIndentedString(askAi)).append("\n");
    sb.append("    askAiViewer: ").append(toIndentedString(askAiViewer)).append("\n");
    sb.append("    buy: ").append(toIndentedString(buy)).append("\n");
    sb.append("    canRequestTeamRoleUpgrade: ").append(toIndentedString(canRequestTeamRoleUpgrade)).append("\n");
    sb.append("    canUpdatePrivacyToPublic: ").append(toIndentedString(canUpdatePrivacyToPublic)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    createEditor: ").append(toIndentedString(createEditor)).append("\n");
    sb.append("    delete: ").append(toIndentedString(delete)).append("\n");
    sb.append("    edit: ").append(toIndentedString(edit)).append("\n");
    sb.append("    editPrivacy: ").append(toIndentedString(editPrivacy)).append("\n");
    sb.append("    hasRestrictedPrivacyOptions: ").append(toIndentedString(hasRestrictedPrivacyOptions)).append("\n");
    sb.append("    highlights: ").append(toIndentedString(highlights)).append("\n");
    sb.append("    invite: ").append(toIndentedString(invite)).append("\n");
    sb.append("    legalHold: ").append(toIndentedString(legalHold)).append("\n");
    sb.append("    like: ").append(toIndentedString(like)).append("\n");
    sb.append("    rent: ").append(toIndentedString(rent)).append("\n");
    sb.append("    report: ").append(toIndentedString(report)).append("\n");
    sb.append("    setContentRating: ").append(toIndentedString(setContentRating)).append("\n");
    sb.append("    subscribe: ").append(toIndentedString(subscribe)).append("\n");
    sb.append("    teamMentions: ").append(toIndentedString(teamMentions)).append("\n");
    sb.append("    transcriptVideoEditor: ").append(toIndentedString(transcriptVideoEditor)).append("\n");
    sb.append("    trim: ").append(toIndentedString(trim)).append("\n");
    sb.append("    validate: ").append(toIndentedString(validate)).append("\n");
    sb.append("    viewPrivacy: ").append(toIndentedString(viewPrivacy)).append("\n");
    sb.append("    viewTeamMembers: ").append(toIndentedString(viewTeamMembers)).append("\n");
    sb.append("    watched: ").append(toIndentedString(watched)).append("\n");
    sb.append("    watchlater: ").append(toIndentedString(watchlater)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("summary");
    openapiFields.add("album");
    openapiFields.add("ask_ai");
    openapiFields.add("ask_ai_viewer");
    openapiFields.add("buy");
    openapiFields.add("can_request_team_role_upgrade");
    openapiFields.add("can_update_privacy_to_public");
    openapiFields.add("channel");
    openapiFields.add("create_editor");
    openapiFields.add("delete");
    openapiFields.add("edit");
    openapiFields.add("edit_privacy");
    openapiFields.add("has_restricted_privacy_options");
    openapiFields.add("highlights");
    openapiFields.add("invite");
    openapiFields.add("legal_hold");
    openapiFields.add("like");
    openapiFields.add("rent");
    openapiFields.add("report");
    openapiFields.add("set_content_rating");
    openapiFields.add("subscribe");
    openapiFields.add("team_mentions");
    openapiFields.add("transcript_video_editor");
    openapiFields.add("trim");
    openapiFields.add("validate");
    openapiFields.add("view_privacy");
    openapiFields.add("view_team_members");
    openapiFields.add("watched");
    openapiFields.add("watchlater");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("summary");
    openapiRequiredFields.add("album");
    openapiRequiredFields.add("ask_ai");
    openapiRequiredFields.add("ask_ai_viewer");
    openapiRequiredFields.add("buy");
    openapiRequiredFields.add("can_request_team_role_upgrade");
    openapiRequiredFields.add("can_update_privacy_to_public");
    openapiRequiredFields.add("channel");
    openapiRequiredFields.add("create_editor");
    openapiRequiredFields.add("delete");
    openapiRequiredFields.add("edit");
    openapiRequiredFields.add("edit_privacy");
    openapiRequiredFields.add("has_restricted_privacy_options");
    openapiRequiredFields.add("highlights");
    openapiRequiredFields.add("invite");
    openapiRequiredFields.add("legal_hold");
    openapiRequiredFields.add("like");
    openapiRequiredFields.add("rent");
    openapiRequiredFields.add("report");
    openapiRequiredFields.add("set_content_rating");
    openapiRequiredFields.add("team_mentions");
    openapiRequiredFields.add("transcript_video_editor");
    openapiRequiredFields.add("trim");
    openapiRequiredFields.add("validate");
    openapiRequiredFields.add("view_privacy");
    openapiRequiredFields.add("view_team_members");
    openapiRequiredFields.add("watched");
    openapiRequiredFields.add("watchlater");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to VideoMetadataInteractions
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!VideoMetadataInteractions.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VideoMetadataInteractions is not found in the empty JSON string", VideoMetadataInteractions.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : VideoMetadataInteractions.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `summary`
      VideoMetadataInteractionsSummary.validateJsonObject(jsonObj.getAsJsonObject("summary"));
      // validate the required field `album`
      VideoMetadataInteractionsAlbum.validateJsonObject(jsonObj.getAsJsonObject("album"));
      // validate the required field `ask_ai`
      VideoMetadataInteractionsAskAi.validateJsonObject(jsonObj.getAsJsonObject("ask_ai"));
      // validate the required field `ask_ai_viewer`
      VideoMetadataInteractionsAskAiViewer.validateJsonObject(jsonObj.getAsJsonObject("ask_ai_viewer"));
      // validate the required field `buy`
      VideoMetadataInteractionsBuy.validateJsonObject(jsonObj.getAsJsonObject("buy"));
      // validate the required field `can_request_team_role_upgrade`
      VideoMetadataInteractionsCanRequestTeamRoleUpgrade.validateJsonObject(jsonObj.getAsJsonObject("can_request_team_role_upgrade"));
      // validate the required field `can_update_privacy_to_public`
      VideoMetadataInteractionsCanUpdatePrivacyToPublic.validateJsonObject(jsonObj.getAsJsonObject("can_update_privacy_to_public"));
      // validate the required field `channel`
      VideoMetadataInteractionsChannel.validateJsonObject(jsonObj.getAsJsonObject("channel"));
      // validate the required field `create_editor`
      VideoMetadataInteractionsCreateEditor.validateJsonObject(jsonObj.getAsJsonObject("create_editor"));
      // validate the required field `delete`
      VideoMetadataInteractionsDelete.validateJsonObject(jsonObj.getAsJsonObject("delete"));
      // validate the required field `edit`
      VideoMetadataInteractionsEdit.validateJsonObject(jsonObj.getAsJsonObject("edit"));
      // validate the required field `edit_privacy`
      VideoMetadataInteractionsEditPrivacy.validateJsonObject(jsonObj.getAsJsonObject("edit_privacy"));
      // validate the required field `has_restricted_privacy_options`
      VideoMetadataInteractionsHasRestrictedPrivacyOptions.validateJsonObject(jsonObj.getAsJsonObject("has_restricted_privacy_options"));
      // validate the required field `highlights`
      VideoMetadataInteractionsHighlights.validateJsonObject(jsonObj.getAsJsonObject("highlights"));
      // validate the required field `invite`
      VideoMetadataInteractionsInvite.validateJsonObject(jsonObj.getAsJsonObject("invite"));
      // validate the required field `legal_hold`
      VideoMetadataInteractionsLegalHold.validateJsonObject(jsonObj.getAsJsonObject("legal_hold"));
      // validate the required field `like`
      VideoMetadataInteractionsLike.validateJsonObject(jsonObj.getAsJsonObject("like"));
      // validate the required field `rent`
      VideoMetadataInteractionsRent.validateJsonObject(jsonObj.getAsJsonObject("rent"));
      // validate the required field `report`
      VideoMetadataInteractionsReport.validateJsonObject(jsonObj.getAsJsonObject("report"));
      // validate the required field `set_content_rating`
      VideoMetadataInteractionsSetContentRating.validateJsonObject(jsonObj.getAsJsonObject("set_content_rating"));
      // validate the optional field `subscribe`
      if (jsonObj.get("subscribe") != null && !jsonObj.get("subscribe").isJsonNull()) {
        VideoMetadataInteractionsSubscribe.validateJsonObject(jsonObj.getAsJsonObject("subscribe"));
      }
      // validate the required field `team_mentions`
      VideoMetadataInteractionsTeamMentions.validateJsonObject(jsonObj.getAsJsonObject("team_mentions"));
      // validate the required field `transcript_video_editor`
      VideoMetadataInteractionsTranscriptVideoEditor.validateJsonObject(jsonObj.getAsJsonObject("transcript_video_editor"));
      // validate the required field `trim`
      VideoMetadataInteractionsTrim.validateJsonObject(jsonObj.getAsJsonObject("trim"));
      // validate the required field `validate`
      VideoMetadataInteractionsValidate.validateJsonObject(jsonObj.getAsJsonObject("validate"));
      // validate the required field `view_privacy`
      VideoMetadataInteractionsViewPrivacy.validateJsonObject(jsonObj.getAsJsonObject("view_privacy"));
      // validate the required field `view_team_members`
      VideoMetadataInteractionsViewTeamMembers.validateJsonObject(jsonObj.getAsJsonObject("view_team_members"));
      // validate the required field `watched`
      VideoMetadataInteractionsWatched.validateJsonObject(jsonObj.getAsJsonObject("watched"));
      // validate the required field `watchlater`
      VideoMetadataInteractionsWatchlater.validateJsonObject(jsonObj.getAsJsonObject("watchlater"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VideoMetadataInteractions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VideoMetadataInteractions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VideoMetadataInteractions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VideoMetadataInteractions.class));

       return (TypeAdapter<T>) new TypeAdapter<VideoMetadataInteractions>() {
           @Override
           public void write(JsonWriter out, VideoMetadataInteractions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public VideoMetadataInteractions read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             VideoMetadataInteractions instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of VideoMetadataInteractions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of VideoMetadataInteractions
  * @throws IOException if the JSON string is invalid with respect to VideoMetadataInteractions
  */
  public static VideoMetadataInteractions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VideoMetadataInteractions.class);
  }

 /**
  * Convert an instance of VideoMetadataInteractions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

