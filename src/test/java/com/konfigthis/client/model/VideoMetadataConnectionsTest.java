/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AncestorPath;
import com.konfigthis.client.model.VideoMetadataConnectionsAvailableChannels;
import com.konfigthis.client.model.VideoMetadataConnectionsComments;
import com.konfigthis.client.model.VideoMetadataConnectionsCredits;
import com.konfigthis.client.model.VideoMetadataConnectionsLikes;
import com.konfigthis.client.model.VideoMetadataConnectionsOndemand;
import com.konfigthis.client.model.VideoMetadataConnectionsPictures;
import com.konfigthis.client.model.VideoMetadataConnectionsRecommendations;
import com.konfigthis.client.model.VideoMetadataConnectionsRelated;
import com.konfigthis.client.model.VideoMetadataConnectionsResourceCreatorTeamUser;
import com.konfigthis.client.model.VideoMetadataConnectionsSeason;
import com.konfigthis.client.model.VideoMetadataConnectionsTeamPermissions;
import com.konfigthis.client.model.VideoMetadataConnectionsTexttracks;
import com.konfigthis.client.model.VideoMetadataConnectionsTrailer;
import com.konfigthis.client.model.VideoMetadataConnectionsUsersWithAccess;
import com.konfigthis.client.model.VideoMetadataConnectionsVersions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for VideoMetadataConnections
 */
public class VideoMetadataConnectionsTest {
    private final VideoMetadataConnections model = new VideoMetadataConnections();

    /**
     * Model tests for VideoMetadataConnections
     */
    @Test
    public void testVideoMetadataConnections() {
        // TODO: test VideoMetadataConnections
    }

    /**
     * Test the property 'ancestorPath'
     */
    @Test
    public void ancestorPathTest() {
        // TODO: test ancestorPath
    }

    /**
     * Test the property 'availableChannels'
     */
    @Test
    public void availableChannelsTest() {
        // TODO: test availableChannels
    }

    /**
     * Test the property 'comments'
     */
    @Test
    public void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'credits'
     */
    @Test
    public void creditsTest() {
        // TODO: test credits
    }

    /**
     * Test the property 'likes'
     */
    @Test
    public void likesTest() {
        // TODO: test likes
    }

    /**
     * Test the property 'ondemand'
     */
    @Test
    public void ondemandTest() {
        // TODO: test ondemand
    }

    /**
     * Test the property 'pictures'
     */
    @Test
    public void picturesTest() {
        // TODO: test pictures
    }

    /**
     * Test the property 'recommendations'
     */
    @Test
    public void recommendationsTest() {
        // TODO: test recommendations
    }

    /**
     * Test the property 'related'
     */
    @Test
    public void relatedTest() {
        // TODO: test related
    }

    /**
     * Test the property 'resourceCreatorTeamUser'
     */
    @Test
    public void resourceCreatorTeamUserTest() {
        // TODO: test resourceCreatorTeamUser
    }

    /**
     * Test the property 'season'
     */
    @Test
    public void seasonTest() {
        // TODO: test season
    }

    /**
     * Test the property 'teamPermissions'
     */
    @Test
    public void teamPermissionsTest() {
        // TODO: test teamPermissions
    }

    /**
     * Test the property 'texttracks'
     */
    @Test
    public void texttracksTest() {
        // TODO: test texttracks
    }

    /**
     * Test the property 'trailer'
     */
    @Test
    public void trailerTest() {
        // TODO: test trailer
    }

    /**
     * Test the property 'usersWithAccess'
     */
    @Test
    public void usersWithAccessTest() {
        // TODO: test usersWithAccess
    }

    /**
     * Test the property 'versions'
     */
    @Test
    public void versionsTest() {
        // TODO: test versions
    }

}
