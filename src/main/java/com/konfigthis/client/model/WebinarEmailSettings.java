/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Picture;
import com.konfigthis.client.model.User;
import com.konfigthis.client.model.WebinarEmailSettingsEmailEventReminder24Hrs;
import com.konfigthis.client.model.WebinarEmailSettingsEmailPostEventThankYou;
import com.konfigthis.client.model.WebinarEmailSettingsEmailRegistrationConfirmation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * WebinarEmailSettings
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class WebinarEmailSettings {
  public static final String SERIALIZED_NAME_ACCENT_COLOR = "accent_color";
  @SerializedName(SERIALIZED_NAME_ACCENT_COLOR)
  private String accentColor;

  public static final String SERIALIZED_NAME_CUSTOM_LINK = "custom_link";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LINK)
  private String customLink;

  public static final String SERIALIZED_NAME_EMAIL_EVENT_REMINDER24_HRS = "email_event_reminder_24_hrs";
  @SerializedName(SERIALIZED_NAME_EMAIL_EVENT_REMINDER24_HRS)
  private WebinarEmailSettingsEmailEventReminder24Hrs emailEventReminder24Hrs;

  public static final String SERIALIZED_NAME_EMAIL_POST_EVENT_THANK_YOU = "email_post_event_thank_you";
  @SerializedName(SERIALIZED_NAME_EMAIL_POST_EVENT_THANK_YOU)
  private WebinarEmailSettingsEmailPostEventThankYou emailPostEventThankYou;

  public static final String SERIALIZED_NAME_EMAIL_PREFERENCES = "email_preferences";
  @SerializedName(SERIALIZED_NAME_EMAIL_PREFERENCES)
  private List<String> emailPreferences = new ArrayList<>();

  public static final String SERIALIZED_NAME_EMAIL_REGISTRATION_CONFIRMATION = "email_registration_confirmation";
  @SerializedName(SERIALIZED_NAME_EMAIL_REGISTRATION_CONFIRMATION)
  private WebinarEmailSettingsEmailRegistrationConfirmation emailRegistrationConfirmation;

  public static final String SERIALIZED_NAME_FOLLOW_UP_SEND_ON = "follow_up_send_on";
  @SerializedName(SERIALIZED_NAME_FOLLOW_UP_SEND_ON)
  private String followUpSendOn;

  public static final String SERIALIZED_NAME_FOLLOW_UP_SENDER = "follow_up_sender";
  @SerializedName(SERIALIZED_NAME_FOLLOW_UP_SENDER)
  private User followUpSender;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private String from;

  public static final String SERIALIZED_NAME_LOGO_URI = "logo_uri";
  @SerializedName(SERIALIZED_NAME_LOGO_URI)
  private String logoUri;

  public static final String SERIALIZED_NAME_PICTURES = "pictures";
  @SerializedName(SERIALIZED_NAME_PICTURES)
  private Picture pictures;

  public static final String SERIALIZED_NAME_REPLY_EMAIL = "reply_email";
  @SerializedName(SERIALIZED_NAME_REPLY_EMAIL)
  private String replyEmail;

  public static final String SERIALIZED_NAME_SENDER_ADDRESS = "sender_address";
  @SerializedName(SERIALIZED_NAME_SENDER_ADDRESS)
  private String senderAddress;

  public static final String SERIALIZED_NAME_SENDER_POLICY_URL = "sender_policy_url";
  @SerializedName(SERIALIZED_NAME_SENDER_POLICY_URL)
  private String senderPolicyUrl;

  public static final String SERIALIZED_NAME_USE_CUSTOM_LINK = "use_custom_link";
  @SerializedName(SERIALIZED_NAME_USE_CUSTOM_LINK)
  private Boolean useCustomLink;

  public static final String SERIALIZED_NAME_USE_REPLY_EMAIL = "use_reply_email";
  @SerializedName(SERIALIZED_NAME_USE_REPLY_EMAIL)
  private Boolean useReplyEmail;

  public static final String SERIALIZED_NAME_USE_SENDER_ADDRESS = "use_sender_address";
  @SerializedName(SERIALIZED_NAME_USE_SENDER_ADDRESS)
  private Boolean useSenderAddress;

  public static final String SERIALIZED_NAME_USE_SENDER_POLICY_URL = "use_sender_policy_url";
  @SerializedName(SERIALIZED_NAME_USE_SENDER_POLICY_URL)
  private Boolean useSenderPolicyUrl;

  public WebinarEmailSettings() {
  }

  public WebinarEmailSettings accentColor(String accentColor) {
    
    
    
    
    this.accentColor = accentColor;
    return this;
  }

   /**
   * The accent color scheme for emails that are sent about the webinar.
   * @return accentColor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "#00000f", required = true, value = "The accent color scheme for emails that are sent about the webinar.")

  public String getAccentColor() {
    return accentColor;
  }


  public void setAccentColor(String accentColor) {
    
    
    
    this.accentColor = accentColor;
  }


  public WebinarEmailSettings customLink(String customLink) {
    
    
    
    
    this.customLink = customLink;
    return this;
  }

   /**
   * The custom link for emails that are sent about the webinar.
   * @return customLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://vimeo.com", required = true, value = "The custom link for emails that are sent about the webinar.")

  public String getCustomLink() {
    return customLink;
  }


  public void setCustomLink(String customLink) {
    
    
    
    this.customLink = customLink;
  }


  public WebinarEmailSettings emailEventReminder24Hrs(WebinarEmailSettingsEmailEventReminder24Hrs emailEventReminder24Hrs) {
    
    
    
    
    this.emailEventReminder24Hrs = emailEventReminder24Hrs;
    return this;
  }

   /**
   * Get emailEventReminder24Hrs
   * @return emailEventReminder24Hrs
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public WebinarEmailSettingsEmailEventReminder24Hrs getEmailEventReminder24Hrs() {
    return emailEventReminder24Hrs;
  }


  public void setEmailEventReminder24Hrs(WebinarEmailSettingsEmailEventReminder24Hrs emailEventReminder24Hrs) {
    
    
    
    this.emailEventReminder24Hrs = emailEventReminder24Hrs;
  }


  public WebinarEmailSettings emailPostEventThankYou(WebinarEmailSettingsEmailPostEventThankYou emailPostEventThankYou) {
    
    
    
    
    this.emailPostEventThankYou = emailPostEventThankYou;
    return this;
  }

   /**
   * Get emailPostEventThankYou
   * @return emailPostEventThankYou
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public WebinarEmailSettingsEmailPostEventThankYou getEmailPostEventThankYou() {
    return emailPostEventThankYou;
  }


  public void setEmailPostEventThankYou(WebinarEmailSettingsEmailPostEventThankYou emailPostEventThankYou) {
    
    
    
    this.emailPostEventThankYou = emailPostEventThankYou;
  }


  public WebinarEmailSettings emailPreferences(List<String> emailPreferences) {
    
    
    
    
    this.emailPreferences = emailPreferences;
    return this;
  }

  public WebinarEmailSettings addEmailPreferencesItem(String emailPreferencesItem) {
    this.emailPreferences.add(emailPreferencesItem);
    return this;
  }

   /**
   * A list of preferences for the emails to send during the webinar event.
   * @return emailPreferences
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A list of preferences for the emails to send during the webinar event.")

  public List<String> getEmailPreferences() {
    return emailPreferences;
  }


  public void setEmailPreferences(List<String> emailPreferences) {
    
    
    
    this.emailPreferences = emailPreferences;
  }


  public WebinarEmailSettings emailRegistrationConfirmation(WebinarEmailSettingsEmailRegistrationConfirmation emailRegistrationConfirmation) {
    
    
    
    
    this.emailRegistrationConfirmation = emailRegistrationConfirmation;
    return this;
  }

   /**
   * Get emailRegistrationConfirmation
   * @return emailRegistrationConfirmation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public WebinarEmailSettingsEmailRegistrationConfirmation getEmailRegistrationConfirmation() {
    return emailRegistrationConfirmation;
  }


  public void setEmailRegistrationConfirmation(WebinarEmailSettingsEmailRegistrationConfirmation emailRegistrationConfirmation) {
    
    
    
    this.emailRegistrationConfirmation = emailRegistrationConfirmation;
  }


  public WebinarEmailSettings followUpSendOn(String followUpSendOn) {
    
    
    
    
    this.followUpSendOn = followUpSendOn;
    return this;
  }

   /**
   * The time in ISO 8601 format when the follow-up email was sent.
   * @return followUpSendOn
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2016-11-03T09:24:56+00:00", required = true, value = "The time in ISO 8601 format when the follow-up email was sent.")

  public String getFollowUpSendOn() {
    return followUpSendOn;
  }


  public void setFollowUpSendOn(String followUpSendOn) {
    
    
    
    this.followUpSendOn = followUpSendOn;
  }


  public WebinarEmailSettings followUpSender(User followUpSender) {
    
    
    
    
    this.followUpSender = followUpSender;
    return this;
  }

   /**
   * The user who manually triggered the follow-up email.
   * @return followUpSender
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The user who manually triggered the follow-up email.")

  public User getFollowUpSender() {
    return followUpSender;
  }


  public void setFollowUpSender(User followUpSender) {
    
    
    
    this.followUpSender = followUpSender;
  }


  public WebinarEmailSettings from(String from) {
    
    
    
    
    this.from = from;
    return this;
  }

   /**
   * The name of the sender for emails that are sent about the webinar.
   * @return from
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Vimeo", required = true, value = "The name of the sender for emails that are sent about the webinar.")

  public String getFrom() {
    return from;
  }


  public void setFrom(String from) {
    
    
    
    this.from = from;
  }


  public WebinarEmailSettings logoUri(String logoUri) {
    
    
    
    
    this.logoUri = logoUri;
    return this;
  }

   /**
   * The URI of the logo image to include in emails that are sent about the webinar.
   * @return logoUri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/users/1234/team_logos/234", required = true, value = "The URI of the logo image to include in emails that are sent about the webinar.")

  public String getLogoUri() {
    return logoUri;
  }


  public void setLogoUri(String logoUri) {
    
    
    
    this.logoUri = logoUri;
  }


  public WebinarEmailSettings pictures(Picture pictures) {
    
    
    
    
    this.pictures = pictures;
    return this;
  }

   /**
   * The logo to include in emails that are sent about the webinar.
   * @return pictures
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The logo to include in emails that are sent about the webinar.")

  public Picture getPictures() {
    return pictures;
  }


  public void setPictures(Picture pictures) {
    
    
    
    this.pictures = pictures;
  }


  public WebinarEmailSettings replyEmail(String replyEmail) {
    
    
    
    
    this.replyEmail = replyEmail;
    return this;
  }

   /**
   * The sender&#39;s reply email address.
   * @return replyEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "test@vimeo.com", required = true, value = "The sender's reply email address.")

  public String getReplyEmail() {
    return replyEmail;
  }


  public void setReplyEmail(String replyEmail) {
    
    
    
    this.replyEmail = replyEmail;
  }


  public WebinarEmailSettings senderAddress(String senderAddress) {
    
    
    
    
    this.senderAddress = senderAddress;
    return this;
  }

   /**
   * The sender&#39;s physical address.
   * @return senderAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Bangalore, India", required = true, value = "The sender's physical address.")

  public String getSenderAddress() {
    return senderAddress;
  }


  public void setSenderAddress(String senderAddress) {
    
    
    
    this.senderAddress = senderAddress;
  }


  public WebinarEmailSettings senderPolicyUrl(String senderPolicyUrl) {
    
    
    
    
    this.senderPolicyUrl = senderPolicyUrl;
    return this;
  }

   /**
   * The URL of the sender&#39;s privacy policy.
   * @return senderPolicyUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://vimeo.com/policy", required = true, value = "The URL of the sender's privacy policy.")

  public String getSenderPolicyUrl() {
    return senderPolicyUrl;
  }


  public void setSenderPolicyUrl(String senderPolicyUrl) {
    
    
    
    this.senderPolicyUrl = senderPolicyUrl;
  }


  public WebinarEmailSettings useCustomLink(Boolean useCustomLink) {
    
    
    
    
    this.useCustomLink = useCustomLink;
    return this;
  }

   /**
   * Whether to include a custom link in emails that are sent about the webinar.
   * @return useCustomLink
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Whether to include a custom link in emails that are sent about the webinar.")

  public Boolean getUseCustomLink() {
    return useCustomLink;
  }


  public void setUseCustomLink(Boolean useCustomLink) {
    
    
    
    this.useCustomLink = useCustomLink;
  }


  public WebinarEmailSettings useReplyEmail(Boolean useReplyEmail) {
    
    
    
    
    this.useReplyEmail = useReplyEmail;
    return this;
  }

   /**
   * Whether to include a reply link in the footer of emails that are sent about the webinar.
   * @return useReplyEmail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "Whether to include a reply link in the footer of emails that are sent about the webinar.")

  public Boolean getUseReplyEmail() {
    return useReplyEmail;
  }


  public void setUseReplyEmail(Boolean useReplyEmail) {
    
    
    
    this.useReplyEmail = useReplyEmail;
  }


  public WebinarEmailSettings useSenderAddress(Boolean useSenderAddress) {
    
    
    
    
    this.useSenderAddress = useSenderAddress;
    return this;
  }

   /**
   * Whether to include the sender&#39;s physical address in the footer of emails that are sent about the webinar.
   * @return useSenderAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "Whether to include the sender's physical address in the footer of emails that are sent about the webinar.")

  public Boolean getUseSenderAddress() {
    return useSenderAddress;
  }


  public void setUseSenderAddress(Boolean useSenderAddress) {
    
    
    
    this.useSenderAddress = useSenderAddress;
  }


  public WebinarEmailSettings useSenderPolicyUrl(Boolean useSenderPolicyUrl) {
    
    
    
    
    this.useSenderPolicyUrl = useSenderPolicyUrl;
    return this;
  }

   /**
   * Whether to include the URL of the sender&#39;s privacy policy in the footer of emails that are sent about the webinar.
   * @return useSenderPolicyUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "Whether to include the URL of the sender's privacy policy in the footer of emails that are sent about the webinar.")

  public Boolean getUseSenderPolicyUrl() {
    return useSenderPolicyUrl;
  }


  public void setUseSenderPolicyUrl(Boolean useSenderPolicyUrl) {
    
    
    
    this.useSenderPolicyUrl = useSenderPolicyUrl;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the WebinarEmailSettings instance itself
   */
  public WebinarEmailSettings putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebinarEmailSettings webinarEmailSettings = (WebinarEmailSettings) o;
    return Objects.equals(this.accentColor, webinarEmailSettings.accentColor) &&
        Objects.equals(this.customLink, webinarEmailSettings.customLink) &&
        Objects.equals(this.emailEventReminder24Hrs, webinarEmailSettings.emailEventReminder24Hrs) &&
        Objects.equals(this.emailPostEventThankYou, webinarEmailSettings.emailPostEventThankYou) &&
        Objects.equals(this.emailPreferences, webinarEmailSettings.emailPreferences) &&
        Objects.equals(this.emailRegistrationConfirmation, webinarEmailSettings.emailRegistrationConfirmation) &&
        Objects.equals(this.followUpSendOn, webinarEmailSettings.followUpSendOn) &&
        Objects.equals(this.followUpSender, webinarEmailSettings.followUpSender) &&
        Objects.equals(this.from, webinarEmailSettings.from) &&
        Objects.equals(this.logoUri, webinarEmailSettings.logoUri) &&
        Objects.equals(this.pictures, webinarEmailSettings.pictures) &&
        Objects.equals(this.replyEmail, webinarEmailSettings.replyEmail) &&
        Objects.equals(this.senderAddress, webinarEmailSettings.senderAddress) &&
        Objects.equals(this.senderPolicyUrl, webinarEmailSettings.senderPolicyUrl) &&
        Objects.equals(this.useCustomLink, webinarEmailSettings.useCustomLink) &&
        Objects.equals(this.useReplyEmail, webinarEmailSettings.useReplyEmail) &&
        Objects.equals(this.useSenderAddress, webinarEmailSettings.useSenderAddress) &&
        Objects.equals(this.useSenderPolicyUrl, webinarEmailSettings.useSenderPolicyUrl)&&
        Objects.equals(this.additionalProperties, webinarEmailSettings.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accentColor, customLink, emailEventReminder24Hrs, emailPostEventThankYou, emailPreferences, emailRegistrationConfirmation, followUpSendOn, followUpSender, from, logoUri, pictures, replyEmail, senderAddress, senderPolicyUrl, useCustomLink, useReplyEmail, useSenderAddress, useSenderPolicyUrl, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebinarEmailSettings {\n");
    sb.append("    accentColor: ").append(toIndentedString(accentColor)).append("\n");
    sb.append("    customLink: ").append(toIndentedString(customLink)).append("\n");
    sb.append("    emailEventReminder24Hrs: ").append(toIndentedString(emailEventReminder24Hrs)).append("\n");
    sb.append("    emailPostEventThankYou: ").append(toIndentedString(emailPostEventThankYou)).append("\n");
    sb.append("    emailPreferences: ").append(toIndentedString(emailPreferences)).append("\n");
    sb.append("    emailRegistrationConfirmation: ").append(toIndentedString(emailRegistrationConfirmation)).append("\n");
    sb.append("    followUpSendOn: ").append(toIndentedString(followUpSendOn)).append("\n");
    sb.append("    followUpSender: ").append(toIndentedString(followUpSender)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    logoUri: ").append(toIndentedString(logoUri)).append("\n");
    sb.append("    pictures: ").append(toIndentedString(pictures)).append("\n");
    sb.append("    replyEmail: ").append(toIndentedString(replyEmail)).append("\n");
    sb.append("    senderAddress: ").append(toIndentedString(senderAddress)).append("\n");
    sb.append("    senderPolicyUrl: ").append(toIndentedString(senderPolicyUrl)).append("\n");
    sb.append("    useCustomLink: ").append(toIndentedString(useCustomLink)).append("\n");
    sb.append("    useReplyEmail: ").append(toIndentedString(useReplyEmail)).append("\n");
    sb.append("    useSenderAddress: ").append(toIndentedString(useSenderAddress)).append("\n");
    sb.append("    useSenderPolicyUrl: ").append(toIndentedString(useSenderPolicyUrl)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accent_color");
    openapiFields.add("custom_link");
    openapiFields.add("email_event_reminder_24_hrs");
    openapiFields.add("email_post_event_thank_you");
    openapiFields.add("email_preferences");
    openapiFields.add("email_registration_confirmation");
    openapiFields.add("follow_up_send_on");
    openapiFields.add("follow_up_sender");
    openapiFields.add("from");
    openapiFields.add("logo_uri");
    openapiFields.add("pictures");
    openapiFields.add("reply_email");
    openapiFields.add("sender_address");
    openapiFields.add("sender_policy_url");
    openapiFields.add("use_custom_link");
    openapiFields.add("use_reply_email");
    openapiFields.add("use_sender_address");
    openapiFields.add("use_sender_policy_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("accent_color");
    openapiRequiredFields.add("custom_link");
    openapiRequiredFields.add("email_event_reminder_24_hrs");
    openapiRequiredFields.add("email_post_event_thank_you");
    openapiRequiredFields.add("email_preferences");
    openapiRequiredFields.add("email_registration_confirmation");
    openapiRequiredFields.add("follow_up_send_on");
    openapiRequiredFields.add("follow_up_sender");
    openapiRequiredFields.add("from");
    openapiRequiredFields.add("logo_uri");
    openapiRequiredFields.add("pictures");
    openapiRequiredFields.add("reply_email");
    openapiRequiredFields.add("sender_address");
    openapiRequiredFields.add("sender_policy_url");
    openapiRequiredFields.add("use_custom_link");
    openapiRequiredFields.add("use_reply_email");
    openapiRequiredFields.add("use_sender_address");
    openapiRequiredFields.add("use_sender_policy_url");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WebinarEmailSettings
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WebinarEmailSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebinarEmailSettings is not found in the empty JSON string", WebinarEmailSettings.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WebinarEmailSettings.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("accent_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accent_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accent_color").toString()));
      }
      if (!jsonObj.get("custom_link").isJsonNull() && !jsonObj.get("custom_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_link").toString()));
      }
      // validate the required field `email_event_reminder_24_hrs`
      WebinarEmailSettingsEmailEventReminder24Hrs.validateJsonObject(jsonObj.getAsJsonObject("email_event_reminder_24_hrs"));
      // validate the required field `email_post_event_thank_you`
      WebinarEmailSettingsEmailPostEventThankYou.validateJsonObject(jsonObj.getAsJsonObject("email_post_event_thank_you"));
      // ensure the required json array is present
      if (jsonObj.get("email_preferences") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("email_preferences").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_preferences` to be an array in the JSON string but got `%s`", jsonObj.get("email_preferences").toString()));
      }
      // validate the required field `email_registration_confirmation`
      WebinarEmailSettingsEmailRegistrationConfirmation.validateJsonObject(jsonObj.getAsJsonObject("email_registration_confirmation"));
      if (!jsonObj.get("follow_up_send_on").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `follow_up_send_on` to be a primitive type in the JSON string but got `%s`", jsonObj.get("follow_up_send_on").toString()));
      }
      // validate the required field `follow_up_sender`
      User.validateJsonObject(jsonObj.getAsJsonObject("follow_up_sender"));
      if (!jsonObj.get("from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from").toString()));
      }
      if (!jsonObj.get("logo_uri").isJsonNull() && !jsonObj.get("logo_uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logo_uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logo_uri").toString()));
      }
      // validate the required field `pictures`
      Picture.validateJsonObject(jsonObj.getAsJsonObject("pictures"));
      if (!jsonObj.get("reply_email").isJsonNull() && !jsonObj.get("reply_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reply_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reply_email").toString()));
      }
      if (!jsonObj.get("sender_address").isJsonNull() && !jsonObj.get("sender_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sender_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sender_address").toString()));
      }
      if (!jsonObj.get("sender_policy_url").isJsonNull() && !jsonObj.get("sender_policy_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sender_policy_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sender_policy_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebinarEmailSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebinarEmailSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebinarEmailSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebinarEmailSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<WebinarEmailSettings>() {
           @Override
           public void write(JsonWriter out, WebinarEmailSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public WebinarEmailSettings read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             WebinarEmailSettings instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WebinarEmailSettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WebinarEmailSettings
  * @throws IOException if the JSON string is invalid with respect to WebinarEmailSettings
  */
  public static WebinarEmailSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebinarEmailSettings.class);
  }

 /**
  * Convert an instance of WebinarEmailSettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

