/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Picture;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EmbedPresetsCustomLogosApi
 */
@Disabled
public class EmbedPresetsCustomLogosApiTest {

    private static EmbedPresetsCustomLogosApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new EmbedPresetsCustomLogosApi(apiClient);
    }

    /**
     * Add a custom user logo
     *
     * This method adds a custom logo representing the authenticated user for display in the embedded player. Be sure to use this method in the context of the multi-step upload procedure described in our [Working with Thumbnail Uploads](https://developer.vimeo.com/api/upload/thumbnails#uploading-a-thumbnail) guide. This method represents Step 2 of the procedure.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addUserLogoTest() throws ApiException {
        Picture response = api.addUserLogo()
                .execute();
        // TODO: test validations
    }

    /**
     * Add a custom user logo
     *
     * This method adds a custom logo representing the authenticated user for display in the embedded player. Be sure to use this method in the context of the multi-step upload procedure described in our [Working with Thumbnail Uploads](https://developer.vimeo.com/api/upload/thumbnails#uploading-a-thumbnail) guide. This method represents Step 2 of the procedure.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addUserLogo_0Test() throws ApiException {
        Double userId = null;
        Picture response = api.addUserLogo_0(userId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a custom user logo
     *
     * This method deletes the specified custom logo belonging to the authenticated user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserLogoTest() throws ApiException {
        Double logoId = null;
        api.deleteUserLogo(logoId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a custom user logo
     *
     * This method deletes the specified custom logo belonging to the authenticated user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserLogo_0Test() throws ApiException {
        Double logoId = null;
        Double userId = null;
        api.deleteUserLogo_0(logoId, userId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a specific custom user logo
     *
     * This method returns a single custom logo belonging to the authenticated user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificUserLogoTest() throws ApiException {
        Double logoId = null;
        Picture response = api.getSpecificUserLogo(logoId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a specific custom user logo
     *
     * This method returns a single custom logo belonging to the authenticated user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificUserLogo_0Test() throws ApiException {
        Double logoId = null;
        Double userId = null;
        Picture response = api.getSpecificUserLogo_0(logoId, userId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all the custom logos that belong to the user
     *
     * This method returns every custom logo that belongs to the authenticated user or team owner.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        List<Picture> response = api.list()
                .execute();
        // TODO: test validations
    }

    /**
     * Get all the custom logos that belong to the user
     *
     * This method returns every custom logo that belongs to the authenticated user or team owner.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listUserLogosTest() throws ApiException {
        Double userId = null;
        List<Picture> response = api.listUserLogos(userId)
                .execute();
        // TODO: test validations
    }

}
