/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Video;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EmbedPresetsVideosApi
 */
@Disabled
public class EmbedPresetsVideosApiTest {

    private static EmbedPresetsVideosApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new EmbedPresetsVideosApi(apiClient);
    }

    /**
     * Add an embed preset to a video
     *
     * This method adds an embed preset to the specified video. The authenticated user must either be the owner of the video or a team user with the contributor or admin role.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addPresetToVideoTest() throws ApiException {
        Double presetId = null;
        Double videoId = null;
        api.addPresetToVideo(presetId, videoId)
                .execute();
        // TODO: test validations
    }

    /**
     * Check if an embed preset has been added to a video
     *
     * This method determines whether a video has the specified embed preset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkIfPresetAddedToVideoTest() throws ApiException {
        Double presetId = null;
        Double videoId = null;
        api.checkIfPresetAddedToVideo(presetId, videoId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all the videos that have a specific embed preset
     *
     * This method returns every video to which the specified embed preset has been added. The authenticated user must be the owner of videos.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPresetVideosTest() throws ApiException {
        Double presetId = null;
        Double userId = null;
        Double page = null;
        Double perPage = null;
        List<Video> response = api.getPresetVideos(presetId, userId)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all the videos that have a specific embed preset
     *
     * This method returns every video to which the specified embed preset has been added. The authenticated user must be the owner of videos.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificPresetVideosTest() throws ApiException {
        Double presetId = null;
        Double page = null;
        Double perPage = null;
        List<Video> response = api.getSpecificPresetVideos(presetId)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove an embed preset from a video
     *
     * This method removes the specified embed preset from a video. The authenticated user must either be the owner of the video or a team user with the contributor or admin role.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removePresetFromVideoTest() throws ApiException {
        Double presetId = null;
        Double videoId = null;
        api.removePresetFromVideo(presetId, videoId)
                .execute();
        // TODO: test validations
    }

}
