/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.TextTrack;
import com.konfigthis.client.model.VideosTextTracksAddTextTrackRequest;
import com.konfigthis.client.model.VideosTextTracksAddTextTrackToVideoRequest;
import com.konfigthis.client.model.VideosTextTracksEditTextTrackRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VideosTextTracksApi
 */
@Disabled
public class VideosTextTracksApiTest {

    private static VideosTextTracksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new VideosTextTracksApi(apiClient);
    }

    /**
     * Add a text track to a video
     *
     * This method adds a text track to the specified video. For more information, see [Working with Text Track Uploads](https://developer.vimeo.com/api/upload/texttracks).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTextTrackTest() throws ApiException {
        String language = null;
        String name = null;
        String type = null;
        Double videoId = null;
        Boolean active = null;
        Boolean isAutoGenerated = null;
        Boolean isEdited = null;
        TextTrack response = api.addTextTrack(language, name, type, videoId)
                .active(active)
                .isAutoGenerated(isAutoGenerated)
                .isEdited(isEdited)
                .execute();
        // TODO: test validations
    }

    /**
     * Add a text track to a video
     *
     * This method adds a text track to the specified video. For more information, see [Working with Text Track Uploads](https://developer.vimeo.com/api/upload/texttracks).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTextTrackToVideoTest() throws ApiException {
        String language = null;
        String name = null;
        String type = null;
        Double channelId = null;
        Double videoId = null;
        Boolean active = null;
        Boolean isAutoGenerated = null;
        Boolean isEdited = null;
        TextTrack response = api.addTextTrackToVideo(language, name, type, channelId, videoId)
                .active(active)
                .isAutoGenerated(isAutoGenerated)
                .isEdited(isEdited)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a text track
     *
     * This method deletes the specified text track from a video. The authenticated user must be the owner of the video.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTextTrackTest() throws ApiException {
        Double texttrackId = null;
        Double videoId = null;
        api.deleteTextTrack(texttrackId, videoId)
                .execute();
        // TODO: test validations
    }

    /**
     * Edit a text track
     *
     * This method edits the specified text track of a video. The authenticated user must be the owner of the video.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void editTextTrackTest() throws ApiException {
        Double texttrackId = null;
        Double videoId = null;
        Boolean active = null;
        String language = null;
        String name = null;
        String type = null;
        TextTrack response = api.editTextTrack(texttrackId, videoId)
                .active(active)
                .language(language)
                .name(name)
                .type(type)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all the text tracks of a video
     *
     * This method returns every text track of the specified video. The authenticated user must be the owner of the video.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTracksTest() throws ApiException {
        Double channelId = null;
        Double videoId = null;
        Double page = null;
        Double perPage = null;
        List<TextTrack> response = api.getAllTracks(channelId, videoId)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all the text tracks of a video
     *
     * This method returns every text track of the specified video. The authenticated user must be the owner of the video.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllVideoTracksTest() throws ApiException {
        Double videoId = null;
        Double page = null;
        Double perPage = null;
        List<TextTrack> response = api.getAllVideoTracks(videoId)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a specific text track
     *
     * This method returns a single text track of the specified video. The authenticated user must be the owner of the video.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificTextTrackTest() throws ApiException {
        Double texttrackId = null;
        Double videoId = null;
        TextTrack response = api.getSpecificTextTrack(texttrackId, videoId)
                .execute();
        // TODO: test validations
    }

}
