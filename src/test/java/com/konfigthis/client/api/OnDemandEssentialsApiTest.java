/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateVodRequest;
import com.konfigthis.client.model.CreateVodRequestBuy;
import com.konfigthis.client.model.CreateVodRequestEpisodes;
import com.konfigthis.client.model.CreateVodRequestRent;
import com.konfigthis.client.model.CreateVodRequestSubscription;
import com.konfigthis.client.model.EditVodRequest;
import com.konfigthis.client.model.EditVodRequestPreorder;
import com.konfigthis.client.model.EditVodRequestPublish;
import com.konfigthis.client.model.OnDemandEssentialsCreatePageRequest;
import com.konfigthis.client.model.OnDemandEssentialsCreatePageRequestBuy;
import com.konfigthis.client.model.OnDemandEssentialsCreatePageRequestEpisodes;
import com.konfigthis.client.model.OnDemandEssentialsCreatePageRequestRent;
import com.konfigthis.client.model.OnDemandEssentialsCreatePageRequestSubscription;
import com.konfigthis.client.model.OnDemandPage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OnDemandEssentialsApi
 */
@Disabled
public class OnDemandEssentialsApiTest {

    private static OnDemandEssentialsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new OnDemandEssentialsApi(apiClient);
    }

    /**
     * Create an On Demand page
     *
     * This method creates a new On Demand page for the specified user. To publish the page, use the [edit](https://developer.vimeo.com/api/reference/on-demand#edit_vod) method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPageTest() throws ApiException {
        String description = null;
        String contentRating = null;
        String name = null;
        String type = null;
        String acceptedCurrencies = null;
        OnDemandEssentialsCreatePageRequestBuy buy = null;
        String domainLink = null;
        OnDemandEssentialsCreatePageRequestEpisodes episodes = null;
        String link = null;
        OnDemandEssentialsCreatePageRequestRent rent = null;
        OnDemandEssentialsCreatePageRequestSubscription subscription = null;
        OnDemandPage response = api.createPage(description, contentRating, name, type)
                .acceptedCurrencies(acceptedCurrencies)
                .buy(buy)
                .domainLink(domainLink)
                .episodes(episodes)
                .link(link)
                .rent(rent)
                .subscription(subscription)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete an On Demand page
     *
     * This method deletes the specified On Demand page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOnDemandPageTest() throws ApiException {
        Double ondemandId = null;
        api.deleteOnDemandPage(ondemandId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all the On Demand pages of the user
     *
     * This method returns every On Demand page belonging to the authenticated user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllUserPagesTest() throws ApiException {
        String direction = null;
        String filter = null;
        Double page = null;
        Double perPage = null;
        String sort = null;
        List<OnDemandPage> response = api.getAllUserPages()
                .direction(direction)
                .filter(filter)
                .page(page)
                .perPage(perPage)
                .sort(sort)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all the On Demand pages of the user
     *
     * This method returns every On Demand page belonging to the authenticated user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllUserPages_0Test() throws ApiException {
        Double userId = null;
        String direction = null;
        String filter = null;
        Double page = null;
        Double perPage = null;
        String sort = null;
        List<OnDemandPage> response = api.getAllUserPages_0(userId)
                .direction(direction)
                .filter(filter)
                .page(page)
                .perPage(perPage)
                .sort(sort)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a specific On Demand page
     *
     * This method returns the specified On Demand page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vodTest() throws ApiException {
        Double ondemandId = null;
        OnDemandPage response = api.vod(ondemandId)
                .execute();
        // TODO: test validations
    }

    /**
     * Edit an On Demand page
     *
     * This method edits the specified On Demand page. Use this method to enable preorders on the page or to publish the page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vod_0Test() throws ApiException {
        Double ondemandId = null;
        String link = null;
        EditVodRequestPreorder preorder = null;
        EditVodRequestPublish publish = null;
        Boolean publishWhenReady = null;
        OnDemandPage response = api.vod_0(ondemandId)
                .link(link)
                .preorder(preorder)
                .publish(publish)
                .publishWhenReady(publishWhenReady)
                .execute();
        // TODO: test validations
    }

    /**
     * Create an On Demand page
     *
     * This method creates a new On Demand page for the specified user. To publish the page, use the [edit](https://developer.vimeo.com/api/reference/on-demand#edit_vod) method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vod_1Test() throws ApiException {
        String description = null;
        String contentRating = null;
        String name = null;
        String type = null;
        Double userId = null;
        String acceptedCurrencies = null;
        CreateVodRequestBuy buy = null;
        String domainLink = null;
        CreateVodRequestEpisodes episodes = null;
        String link = null;
        CreateVodRequestRent rent = null;
        CreateVodRequestSubscription subscription = null;
        OnDemandPage response = api.vod_1(description, contentRating, name, type, userId)
                .acceptedCurrencies(acceptedCurrencies)
                .buy(buy)
                .domainLink(domainLink)
                .episodes(episodes)
                .link(link)
                .rent(rent)
                .subscription(subscription)
                .execute();
        // TODO: test validations
    }

}
