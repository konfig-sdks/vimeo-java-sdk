/*
 * Vimeo API
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EmailCaptureFormCustomFieldsInner;
import com.konfigthis.client.model.EmailCaptureFormEmailListsInner;
import com.konfigthis.client.model.EmailCaptureFormHiddenFieldsInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmailCaptureForm
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmailCaptureForm {
  public static final String SERIALIZED_NAME_CLIP_ID = "clip_id";
  @SerializedName(SERIALIZED_NAME_CLIP_ID)
  private Double clipId;

  public static final String SERIALIZED_NAME_CREATED_TIME = "created_time";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private String createdTime;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<EmailCaptureFormCustomFieldsInner> customFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUSTOM_LOGO = "custom_logo";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LOGO)
  private Double customLogo;

  public static final String SERIALIZED_NAME_CUSTOM_MESSAGE = "custom_message";
  @SerializedName(SERIALIZED_NAME_CUSTOM_MESSAGE)
  private String customMessage;

  public static final String SERIALIZED_NAME_EMAIL_LISTS = "email_lists";
  @SerializedName(SERIALIZED_NAME_EMAIL_LISTS)
  private List<EmailCaptureFormEmailListsInner> emailLists = new ArrayList<>();

  public static final String SERIALIZED_NAME_HIDDEN_FIELDS = "hidden_fields";
  @SerializedName(SERIALIZED_NAME_HIDDEN_FIELDS)
  private List<EmailCaptureFormHiddenFieldsInner> hiddenFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Double id;

  /**
   * When the form appears relative to the video playback.  Option descriptions:  * &#x60;after-video&#x60; - The form appears immediately after the video ends.  * &#x60;before-video&#x60; - The form appears before the video begins.  * &#x60;during-video&#x60; - The form appears during the video at the time specified by the **timecode** field. 
   */
  @JsonAdapter(PositionEnum.Adapter.class)
 public enum PositionEnum {
    AFTER_VIDEO("after-video"),
    
    BEFORE_VIDEO("before-video"),
    
    DURING_VIDEO("during-video");

    private String value;

    PositionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PositionEnum fromValue(String value) {
      for (PositionEnum b : PositionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PositionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PositionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PositionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PositionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private PositionEnum position;

  public static final String SERIALIZED_NAME_PRIVACY_POLICY = "privacy_policy";
  @SerializedName(SERIALIZED_NAME_PRIVACY_POLICY)
  private String privacyPolicy;

  public static final String SERIALIZED_NAME_SKIPPABLE = "skippable";
  @SerializedName(SERIALIZED_NAME_SKIPPABLE)
  private Boolean skippable;

  public static final String SERIALIZED_NAME_TIMECODE = "timecode";
  @SerializedName(SERIALIZED_NAME_TIMECODE)
  private String timecode;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public EmailCaptureForm() {
  }

  public EmailCaptureForm clipId(Double clipId) {
    
    
    
    
    this.clipId = clipId;
    return this;
  }

  public EmailCaptureForm clipId(Integer clipId) {
    
    
    
    
    this.clipId = clipId.doubleValue();
    return this;
  }

   /**
   * The ID of the video associated with the form. If there is no associated video, the value of this field is &#x60;-1&#x60;.
   * @return clipId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "76979871", required = true, value = "The ID of the video associated with the form. If there is no associated video, the value of this field is `-1`.")

  public Double getClipId() {
    return clipId;
  }


  public void setClipId(Double clipId) {
    
    
    
    this.clipId = clipId;
  }


  public EmailCaptureForm createdTime(String createdTime) {
    
    
    
    
    this.createdTime = createdTime;
    return this;
  }

   /**
   * The time in ISO 8601 format when the form was created.
   * @return createdTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2016-11-03T09:24:56+00:00", required = true, value = "The time in ISO 8601 format when the form was created.")

  public String getCreatedTime() {
    return createdTime;
  }


  public void setCreatedTime(String createdTime) {
    
    
    
    this.createdTime = createdTime;
  }


  public EmailCaptureForm customFields(List<EmailCaptureFormCustomFieldsInner> customFields) {
    
    
    
    
    this.customFields = customFields;
    return this;
  }

  public EmailCaptureForm addCustomFieldsItem(EmailCaptureFormCustomFieldsInner customFieldsItem) {
    this.customFields.add(customFieldsItem);
    return this;
  }

   /**
   * The fields to show in the form.
   * @return customFields
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The fields to show in the form.")

  public List<EmailCaptureFormCustomFieldsInner> getCustomFields() {
    return customFields;
  }


  public void setCustomFields(List<EmailCaptureFormCustomFieldsInner> customFields) {
    
    
    
    this.customFields = customFields;
  }


  public EmailCaptureForm customLogo(Double customLogo) {
    
    
    
    
    this.customLogo = customLogo;
    return this;
  }

  public EmailCaptureForm customLogo(Integer customLogo) {
    
    
    
    
    this.customLogo = customLogo.doubleValue();
    return this;
  }

   /**
   * The ID of the logo image to display on the form.
   * @return customLogo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "532603", required = true, value = "The ID of the logo image to display on the form.")

  public Double getCustomLogo() {
    return customLogo;
  }


  public void setCustomLogo(Double customLogo) {
    
    
    
    this.customLogo = customLogo;
  }


  public EmailCaptureForm customMessage(String customMessage) {
    
    
    
    
    this.customMessage = customMessage;
    return this;
  }

   /**
   * The message to display on the form.
   * @return customMessage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Sign up for our mailing list", required = true, value = "The message to display on the form.")

  public String getCustomMessage() {
    return customMessage;
  }


  public void setCustomMessage(String customMessage) {
    
    
    
    this.customMessage = customMessage;
  }


  public EmailCaptureForm emailLists(List<EmailCaptureFormEmailListsInner> emailLists) {
    
    
    
    
    this.emailLists = emailLists;
    return this;
  }

  public EmailCaptureForm addEmailListsItem(EmailCaptureFormEmailListsInner emailListsItem) {
    this.emailLists.add(emailListsItem);
    return this;
  }

   /**
   * The mailing lists on a third-party email service provider that submissions should get synced to.
   * @return emailLists
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The mailing lists on a third-party email service provider that submissions should get synced to.")

  public List<EmailCaptureFormEmailListsInner> getEmailLists() {
    return emailLists;
  }


  public void setEmailLists(List<EmailCaptureFormEmailListsInner> emailLists) {
    
    
    
    this.emailLists = emailLists;
  }


  public EmailCaptureForm hiddenFields(List<EmailCaptureFormHiddenFieldsInner> hiddenFields) {
    
    
    
    
    this.hiddenFields = hiddenFields;
    return this;
  }

  public EmailCaptureForm addHiddenFieldsItem(EmailCaptureFormHiddenFieldsInner hiddenFieldsItem) {
    this.hiddenFields.add(hiddenFieldsItem);
    return this;
  }

   /**
   * The hidden fields to show only in the webinar management page. These fields are hidden in the player registration form.
   * @return hiddenFields
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The hidden fields to show only in the webinar management page. These fields are hidden in the player registration form.")

  public List<EmailCaptureFormHiddenFieldsInner> getHiddenFields() {
    return hiddenFields;
  }


  public void setHiddenFields(List<EmailCaptureFormHiddenFieldsInner> hiddenFields) {
    
    
    
    this.hiddenFields = hiddenFields;
  }


  public EmailCaptureForm id(Double id) {
    
    
    
    
    this.id = id;
    return this;
  }

  public EmailCaptureForm id(Integer id) {
    
    
    
    
    this.id = id.doubleValue();
    return this;
  }

   /**
   * The ID of the email capture form.
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "52845", required = true, value = "The ID of the email capture form.")

  public Double getId() {
    return id;
  }


  public void setId(Double id) {
    
    
    
    this.id = id;
  }


  public EmailCaptureForm position(PositionEnum position) {
    
    
    
    
    this.position = position;
    return this;
  }

   /**
   * When the form appears relative to the video playback.  Option descriptions:  * &#x60;after-video&#x60; - The form appears immediately after the video ends.  * &#x60;before-video&#x60; - The form appears before the video begins.  * &#x60;during-video&#x60; - The form appears during the video at the time specified by the **timecode** field. 
   * @return position
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "BEFORE_VIDEO", required = true, value = "When the form appears relative to the video playback.  Option descriptions:  * `after-video` - The form appears immediately after the video ends.  * `before-video` - The form appears before the video begins.  * `during-video` - The form appears during the video at the time specified by the **timecode** field. ")

  public PositionEnum getPosition() {
    return position;
  }


  public void setPosition(PositionEnum position) {
    
    
    
    this.position = position;
  }


  public EmailCaptureForm privacyPolicy(String privacyPolicy) {
    
    
    
    
    this.privacyPolicy = privacyPolicy;
    return this;
  }

   /**
   * The URL of the privacy policy related to the form.
   * @return privacyPolicy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "https://mywebsite.com/privacy-policy", required = true, value = "The URL of the privacy policy related to the form.")

  public String getPrivacyPolicy() {
    return privacyPolicy;
  }


  public void setPrivacyPolicy(String privacyPolicy) {
    
    
    
    this.privacyPolicy = privacyPolicy;
  }


  public EmailCaptureForm skippable(Boolean skippable) {
    
    
    
    
    this.skippable = skippable;
    return this;
  }

   /**
   * Whether the user can skip the form.
   * @return skippable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Whether the user can skip the form.")

  public Boolean getSkippable() {
    return skippable;
  }


  public void setSkippable(Boolean skippable) {
    
    
    
    this.skippable = skippable;
  }


  public EmailCaptureForm timecode(String timecode) {
    
    
    
    
    this.timecode = timecode;
    return this;
  }

   /**
   * The timecode for when the form appears. This field is used when the value of **position** is &#x60;during-video&#x60;.
   * @return timecode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "00:00", required = true, value = "The timecode for when the form appears. This field is used when the value of **position** is `during-video`.")

  public String getTimecode() {
    return timecode;
  }


  public void setTimecode(String timecode) {
    
    
    
    this.timecode = timecode;
  }


  public EmailCaptureForm uri(String uri) {
    
    
    
    
    this.uri = uri;
    return this;
  }

   /**
   * The canonical relative URI of the video&#39;s email capture form.
   * @return uri
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "/clip_email_capture_form/52845", required = true, value = "The canonical relative URI of the video's email capture form.")

  public String getUri() {
    return uri;
  }


  public void setUri(String uri) {
    
    
    
    this.uri = uri;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmailCaptureForm instance itself
   */
  public EmailCaptureForm putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailCaptureForm emailCaptureForm = (EmailCaptureForm) o;
    return Objects.equals(this.clipId, emailCaptureForm.clipId) &&
        Objects.equals(this.createdTime, emailCaptureForm.createdTime) &&
        Objects.equals(this.customFields, emailCaptureForm.customFields) &&
        Objects.equals(this.customLogo, emailCaptureForm.customLogo) &&
        Objects.equals(this.customMessage, emailCaptureForm.customMessage) &&
        Objects.equals(this.emailLists, emailCaptureForm.emailLists) &&
        Objects.equals(this.hiddenFields, emailCaptureForm.hiddenFields) &&
        Objects.equals(this.id, emailCaptureForm.id) &&
        Objects.equals(this.position, emailCaptureForm.position) &&
        Objects.equals(this.privacyPolicy, emailCaptureForm.privacyPolicy) &&
        Objects.equals(this.skippable, emailCaptureForm.skippable) &&
        Objects.equals(this.timecode, emailCaptureForm.timecode) &&
        Objects.equals(this.uri, emailCaptureForm.uri)&&
        Objects.equals(this.additionalProperties, emailCaptureForm.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clipId, createdTime, customFields, customLogo, customMessage, emailLists, hiddenFields, id, position, privacyPolicy, skippable, timecode, uri, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailCaptureForm {\n");
    sb.append("    clipId: ").append(toIndentedString(clipId)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    customLogo: ").append(toIndentedString(customLogo)).append("\n");
    sb.append("    customMessage: ").append(toIndentedString(customMessage)).append("\n");
    sb.append("    emailLists: ").append(toIndentedString(emailLists)).append("\n");
    sb.append("    hiddenFields: ").append(toIndentedString(hiddenFields)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    privacyPolicy: ").append(toIndentedString(privacyPolicy)).append("\n");
    sb.append("    skippable: ").append(toIndentedString(skippable)).append("\n");
    sb.append("    timecode: ").append(toIndentedString(timecode)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clip_id");
    openapiFields.add("created_time");
    openapiFields.add("custom_fields");
    openapiFields.add("custom_logo");
    openapiFields.add("custom_message");
    openapiFields.add("email_lists");
    openapiFields.add("hidden_fields");
    openapiFields.add("id");
    openapiFields.add("position");
    openapiFields.add("privacy_policy");
    openapiFields.add("skippable");
    openapiFields.add("timecode");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("clip_id");
    openapiRequiredFields.add("created_time");
    openapiRequiredFields.add("custom_fields");
    openapiRequiredFields.add("custom_logo");
    openapiRequiredFields.add("custom_message");
    openapiRequiredFields.add("email_lists");
    openapiRequiredFields.add("hidden_fields");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("position");
    openapiRequiredFields.add("privacy_policy");
    openapiRequiredFields.add("skippable");
    openapiRequiredFields.add("timecode");
    openapiRequiredFields.add("uri");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmailCaptureForm
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmailCaptureForm.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailCaptureForm is not found in the empty JSON string", EmailCaptureForm.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EmailCaptureForm.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("created_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_time").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("custom_fields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_fields` to be an array in the JSON string but got `%s`", jsonObj.get("custom_fields").toString()));
      }

      JsonArray jsonArraycustomFields = jsonObj.getAsJsonArray("custom_fields");
      // validate the required field `custom_fields` (array)
      for (int i = 0; i < jsonArraycustomFields.size(); i++) {
        EmailCaptureFormCustomFieldsInner.validateJsonObject(jsonArraycustomFields.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("custom_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_message").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("email_lists").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_lists` to be an array in the JSON string but got `%s`", jsonObj.get("email_lists").toString()));
      }

      JsonArray jsonArrayemailLists = jsonObj.getAsJsonArray("email_lists");
      // validate the required field `email_lists` (array)
      for (int i = 0; i < jsonArrayemailLists.size(); i++) {
        EmailCaptureFormEmailListsInner.validateJsonObject(jsonArrayemailLists.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("hidden_fields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `hidden_fields` to be an array in the JSON string but got `%s`", jsonObj.get("hidden_fields").toString()));
      }

      JsonArray jsonArrayhiddenFields = jsonObj.getAsJsonArray("hidden_fields");
      // validate the required field `hidden_fields` (array)
      for (int i = 0; i < jsonArrayhiddenFields.size(); i++) {
        EmailCaptureFormHiddenFieldsInner.validateJsonObject(jsonArrayhiddenFields.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position").toString()));
      }
      if (!jsonObj.get("privacy_policy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privacy_policy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privacy_policy").toString()));
      }
      if (!jsonObj.get("timecode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timecode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timecode").toString()));
      }
      if (!jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailCaptureForm.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailCaptureForm' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailCaptureForm> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailCaptureForm.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailCaptureForm>() {
           @Override
           public void write(JsonWriter out, EmailCaptureForm value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailCaptureForm read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmailCaptureForm instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmailCaptureForm given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmailCaptureForm
  * @throws IOException if the JSON string is invalid with respect to EmailCaptureForm
  */
  public static EmailCaptureForm fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailCaptureForm.class);
  }

 /**
  * Convert an instance of EmailCaptureForm to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

